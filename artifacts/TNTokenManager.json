{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "interchainTokenService_",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "acceptOperatorship",
      "inputs": [
        { "name": "fromOperator", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "addFlowIn",
      "inputs": [
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "addFlowLimiter",
      "inputs": [
        { "name": "flowLimiter", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "addFlowOut",
      "inputs": [
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "approveService",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "burnToken",
      "inputs": [
        {
          "name": "tokenAddress_",
          "type": "address",
          "internalType": "address"
        },
        { "name": "from", "type": "address", "internalType": "address" },
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "burnTokenWithReturn",
      "inputs": [
        {
          "name": "tokenAddress_",
          "type": "address",
          "internalType": "address"
        },
        { "name": "from", "type": "address", "internalType": "address" },
        { "name": "nativeAmount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        { "name": "burnedAmount", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "contractId",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "flowInAmount",
      "inputs": [],
      "outputs": [
        {
          "name": "flowInAmount_",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "flowLimit",
      "inputs": [],
      "outputs": [
        { "name": "flowLimit_", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "flowOutAmount",
      "inputs": [],
      "outputs": [
        {
          "name": "flowOutAmount_",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getTokenAddressFromParams",
      "inputs": [
        { "name": "params_", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [
        {
          "name": "tokenAddress_",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "hasRole",
      "inputs": [
        { "name": "account", "type": "address", "internalType": "address" },
        { "name": "role", "type": "uint8", "internalType": "uint8" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "implementationType",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "interchainTokenId",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "interchainTokenService",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isFlowLimiter",
      "inputs": [
        { "name": "addr", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isOperator",
      "inputs": [
        { "name": "addr", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "mintToken",
      "inputs": [
        {
          "name": "tokenAddress_",
          "type": "address",
          "internalType": "address"
        },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "mintTokenWithReturn",
      "inputs": [
        {
          "name": "tokenAddress_",
          "type": "address",
          "internalType": "address"
        },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "originAmount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        { "name": "mintedAmount", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "multicall",
      "inputs": [
        { "name": "data", "type": "bytes[]", "internalType": "bytes[]" }
      ],
      "outputs": [
        { "name": "results", "type": "bytes[]", "internalType": "bytes[]" }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "params",
      "inputs": [
        { "name": "operator_", "type": "bytes", "internalType": "bytes" },
        {
          "name": "tokenAddress_",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        { "name": "params_", "type": "bytes", "internalType": "bytes" }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "proposeOperatorship",
      "inputs": [
        { "name": "operator", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "removeFlowLimiter",
      "inputs": [
        { "name": "flowLimiter", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setFlowLimit",
      "inputs": [
        { "name": "flowLimit_", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setup",
      "inputs": [
        { "name": "params_", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "tokenAddress",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "transferFlowLimiter",
      "inputs": [
        { "name": "from", "type": "address", "internalType": "address" },
        { "name": "to", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferOperatorship",
      "inputs": [
        { "name": "operator", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "FlowLimitSet",
      "inputs": [
        {
          "name": "tokenId",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "operator",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "flowLimit_",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RolesAdded",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "accountRoles",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RolesProposed",
      "inputs": [
        {
          "name": "fromAccount",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "toAccount",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "accountRoles",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RolesRemoved",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "accountRoles",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AlreadyFlowLimiter",
      "inputs": [
        { "name": "flowLimiter", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "FlowAdditionOverflow",
      "inputs": [
        { "name": "flowAmount", "type": "uint256", "internalType": "uint256" },
        { "name": "flowToAdd", "type": "uint256", "internalType": "uint256" },
        { "name": "tokenManager", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "FlowLimitExceeded",
      "inputs": [
        { "name": "limit", "type": "uint256", "internalType": "uint256" },
        { "name": "flowAmount", "type": "uint256", "internalType": "uint256" },
        { "name": "tokenManager", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "FlowLimitOverflow",
      "inputs": [
        { "name": "flowLimit", "type": "uint256", "internalType": "uint256" },
        {
          "name": "flowToCompare",
          "type": "uint256",
          "internalType": "uint256"
        },
        { "name": "tokenManager", "type": "address", "internalType": "address" }
      ]
    },
    { "type": "error", "name": "GiveTokenFailed", "inputs": [] },
    {
      "type": "error",
      "name": "InvalidBytesLength",
      "inputs": [
        { "name": "bytesAddress", "type": "bytes", "internalType": "bytes" }
      ]
    },
    {
      "type": "error",
      "name": "InvalidProposedRoles",
      "inputs": [
        { "name": "fromAccount", "type": "address", "internalType": "address" },
        { "name": "toAccount", "type": "address", "internalType": "address" },
        { "name": "accountRoles", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "MissingAllRoles",
      "inputs": [
        { "name": "account", "type": "address", "internalType": "address" },
        { "name": "accountRoles", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "MissingAnyOfRoles",
      "inputs": [
        { "name": "account", "type": "address", "internalType": "address" },
        { "name": "accountRoles", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "MissingRole",
      "inputs": [
        { "name": "account", "type": "address", "internalType": "address" },
        { "name": "role", "type": "uint8", "internalType": "uint8" }
      ]
    },
    { "type": "error", "name": "MulticallFailed", "inputs": [] },
    {
      "type": "error",
      "name": "NotFlowLimiter",
      "inputs": [
        { "name": "flowLimiter", "type": "address", "internalType": "address" }
      ]
    },
    { "type": "error", "name": "NotProxy", "inputs": [] },
    {
      "type": "error",
      "name": "NotService",
      "inputs": [
        { "name": "caller", "type": "address", "internalType": "address" }
      ]
    },
    { "type": "error", "name": "NotSupported", "inputs": [] },
    {
      "type": "error",
      "name": "NotToken",
      "inputs": [
        { "name": "caller", "type": "address", "internalType": "address" }
      ]
    },
    { "type": "error", "name": "TakeTokenFailed", "inputs": [] },
    { "type": "error", "name": "TokenLinkerZeroAddress", "inputs": [] },
    { "type": "error", "name": "TokenTransferFailed", "inputs": [] },
    { "type": "error", "name": "ZeroAddress", "inputs": [] }
  ],
  "bytecode": {
    "object": "0x60c060405234801561000f575f80fd5b50604051611bd9380380611bd983398101604081905261002e9161006c565b30608052806001600160a01b03811661005a5760405163ba675fc760e01b815260040160405180910390fd5b6001600160a01b031660a05250610099565b5f6020828403121561007c575f80fd5b81516001600160a01b0381168114610092575f80fd5b9392505050565b60805160a051611aee6100eb5f395f81816101cf01528181610569015281816106590152818161069f0152818161079c0152818161089301528181610a130152610d6901525f61098c0152611aee5ff3fe6080604052600436106101ba575f3560e01c80638291286c116100f2578063adc0dc3b11610092578063deb11e7811610062578063deb11e78146104e2578063deb764f514610501578063e915cfd114610520578063f5983e831461053f575f80fd5b8063adc0dc3b14610466578063b555943d14610485578063da4886df146104a4578063dce29136146104c3575f80fd5b80639d76ea58116100cd5780639d76ea58146103f45780639ded06df14610408578063a56dbe6314610427578063ac9650d814610446575f80fd5b80638291286c146103835780638b38b35d146103b557806395a8c58d146103d5575f80fd5b80633416794d1161015d5780636bec32da116101385780636bec32da146103025780636d70f7ae146103215780636f3eef62146103505780637dbab19b1461036f575f80fd5b80633416794d146102c45780634a6a42d8146102e35780634fdf7cb51461024e575f80fd5b8063129d818811610198578063129d81881461024e5780631c53d26514610270578063274158381461029c5780632f3c7888146102b0575f80fd5b806309c6bed9146101be57806310d8d8e31461020e578063120a63b51461022f575b5f80fd5b3480156101c9575f80fd5b506101f17f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b348015610219575f80fd5b5061022d61022836600461152f565b61055e565b005b34801561023a575f80fd5b5061022d61024936600461155a565b6105ba565b348015610259575f80fd5b50610262610605565b604051908152602001610205565b34801561027b575f80fd5b5061028f61028a3660046115ba565b61061f565b604051610205919061165a565b3480156102a7575f80fd5b5061022d61064e565b3480156102bb575f80fd5b5061026261076f565b3480156102cf575f80fd5b5061022d6102de36600461166c565b610791565b3480156102ee575f80fd5b5061022d6102fd36600461155a565b61084d565b34801561030d575f80fd5b5061022d61031c36600461166c565b610888565b34801561032c575f80fd5b5061034061033b36600461155a565b610901565b6040519015158152602001610205565b34801561035b575f80fd5b5061022d61036a36600461155a565b610913565b34801561037a575f80fd5b5061026261094e565b34801561038e575f80fd5b507fde5fa9c0ef6d18cdb8ef4461bfb45c94dc915629a2a1f311fb33838aff95436f610262565b3480156103c0575f80fd5b505f80516020611ac283398151915254610262565b3480156103e0575f80fd5b506103406103ef3660046116aa565b610968565b3480156103ff575f80fd5b506101f1610605565b348015610413575f80fd5b5061022d6104223660046116e6565b610989565b348015610432575f80fd5b5061022d61044136600461152f565b610a3f565b610459610454366004611725565b610ad7565b6040516102059190611796565b348015610471575f80fd5b5061022d6104803660046117f9565b610c08565b348015610490575f80fd5b5061026261049f36600461166c565b610c43565b3480156104af575f80fd5b5061022d6104be36600461155a565b610d52565b3480156104ce575f80fd5b5061022d6104dd36600461152f565b610d5e565b3480156104ed575f80fd5b506103406104fc36600461155a565b610db2565b34801561050c575f80fd5b5061026261051b36600461166c565b610dbe565b34801561052b575f80fd5b5061022d61053a36600461155a565b610df3565b34801561054a575f80fd5b506101f16105593660046116e6565b610e2d565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105ae57604051630d6c7be960e01b81523360048201526024015b60405180910390fd5b6105b781610e42565b50565b60016105d56105c833610e9f565b600160ff84161b16151590565b6105f657338160405163bb6c163960e01b81526004016105a5929190611825565b610601826002610eaa565b5050565b5f604051630280e1e560e61b815260040160405180910390fd5b606083838360405160200161063693929190611841565b60405160208183030381529060405290509392505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461069957604051630d6c7be960e01b81523360048201526024016105a5565b604080517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031660248201525f196044808301919091528251808303909101815260649091018252602080820180516001600160e01b031663095ea7b360e01b17905282516313aedd4b60e31b8152925161076d933092639d76ea58926004808401938290030181865afa15801561073a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061075e9190611881565b6001600160a01b031690610eba565b565b5f8061077d615460426118b0565b90505f61078982610f72565b549392505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107dc57604051630d6c7be960e01b81523360048201526024016105a5565b6040516001600160a01b03831660248201526044810182905261084890632770a7eb60e21b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526001600160a01b03851690610eba565b505050565b600161085b6105c833610e9f565b61087c57338160405163bb6c163960e01b81526004016105a5929190611825565b61060133836001610fc6565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108d357604051630d6c7be960e01b81523360048201526024016105a5565b6040516001600160a01b038316602482015260448101829052610848906340c10f1960e01b90606401610806565b5f61090d826001610968565b92915050565b60016109216105c833610e9f565b61094257338160405163bb6c163960e01b81526004016105a5929190611825565b61060133836001610fd7565b5f8061095c615460426118b0565b90505f61078982610fe8565b5f61098261097584610e9f565b600160ff85161b16151590565b9392505050565b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316036109d257604051635f886e9d60e11b815260040160405180910390fd5b5f6109df8284018461196e565b90505f81515f146109f6576109f382611022565b90505b610a0e8160015b600160ff919091161b60041761104f565b610a397f000000000000000000000000000000000000000000000000000000000000000060016109fd565b50505050565b6002610a4d6105c833610e9f565b610a6e57338160405163bb6c163960e01b81526004016105a5929190611825565b61060182306001600160a01b031663129d81886040518163ffffffff1660e01b8152600401602060405180830381865afa158015610aae573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ad291906119a0565b6110af565b60608167ffffffffffffffff811115610af257610af26118cf565b604051908082528060200260200182016040528015610b2557816020015b6060815260200190600190039081610b105790505b5090505f60605f5b84811015610bff5730868683818110610b4857610b486119b7565b9050602002810190610b5a91906119cb565b604051610b68929190611a0e565b5f60405180830381855af49150503d805f8114610ba0576040519150601f19603f3d011682016040523d82523d5f602084013e610ba5565b606091505b50909350915082610bd95781515f03610bd1576040516309ad446560e31b815260040160405180910390fd5b815182602001fd5b81848281518110610bec57610bec6119b7565b6020908102919091010152600101610b2d565b50505092915050565b6001610c166105c833610e9f565b610c3757338160405163bb6c163960e01b81526004016105a5929190611825565b610848838360046110ff565b6040516001600160a01b038381166024830152604482018390525f918291829190871690632770a7eb60e21b906064015b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051610cb29190611a1d565b5f604051808303815f865af19150503d805f8114610ceb576040519150601f19603f3d011682016040523d82523d5f602084013e610cf0565b606091505b509150915081610d345760405162461bcd60e51b815260206004820152600f60248201526e151153081b5a5b9d0819985a5b1959608a1b60448201526064016105a5565b80806020019051810190610d4891906119a0565b9695505050505050565b6105b781336001611155565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610da957604051630d6c7be960e01b81523360048201526024016105a5565b6105b781611166565b5f61090d826002610968565b6040516001600160a01b038381166024830152604482018390525f9182918291908716906340c10f1960e01b90606401610c74565b6001610e016105c833610e9f565b610e2257338160405163bb6c163960e01b81526004016105a5929190611825565b6106018260026111ae565b5f610e3a82840184611a38565b949350505050565b5f610e585f80516020611ac28339815191525490565b9050805f03610e65575050565b5f610e72615460426118b0565b90505f610e7e82610fe8565b90505f610e8a83610f72565b9050610e98848383886111be565b5050505050565b5f80610789836112c8565b61060182600160ff84161b61104f565b5f80836001600160a01b031683604051610ed49190611a1d565b5f604051808303815f865af19150503d805f8114610f0d576040519150601f19603f3d011682016040523d82523d5f602084013e610f12565b606091505b50915091505f828015610f3d575081511580610f3d575081806020019051810190610f3d9190611a7c565b9050801580610f5457506001600160a01b0385163b155b15610e985760405163022e258160e11b815260040160405180910390fd5b604080517fb221f782e2afd1b10c9284a915bb8aa319f8e6cc8d90aebea117327eafbd28c160208201529081018290525f906060015b60408051601f19818403018152919052805160209091012092915050565b6108488383600160ff85161b6110ff565b6108488383600160ff85161b611334565b604080517ff4ff4213eda59f47bb3fdf8cb7fcc07540628bdeb7f1aebcfe07049bbd9f634f60208201529081018290525f90606001610fa8565b5f8151601414611047578160405163d08dbec560e01b81526004016105a5919061165a565b506014015190565b5f8161105a84610e9f565b17905061106783826113cc565b826001600160a01b03167f34e73c57659d4b6809b53db4feee9b007b892e978114eda420d2991aba150143836040516110a291815260200190565b60405180910390a2505050565b5f80516020611ac2833981519152829055604080513381526020810184905282917f024e856c5f6f5e287ff2be13db089b016f28a6ebe6aaffdfb5fa5b902fdd366b910160405180910390a25050565b61111261110b84610e9f565b8216821490565b61114157604051631fe9beed60e21b81526001600160a01b0384166004820152602481018290526044016105a5565b61114b83826113de565b610848828261104f565b6108488383600160ff85161b611432565b5f61117c5f80516020611ac28339815191525490565b9050805f03611189575050565b5f611196615460426118b0565b90505f6111a282610f72565b90505f610e8a83610fe8565b61060182600160ff84161b6113de565b825482546111cd835f19611a9b565b8211156111fd57604051633428985b60e21b815260048101849052602481018390523060448201526064016105a5565b611208865f19611a9b565b8111156112385760405163a6413e8b60e01b815260048101879052602481018290523060448201526064016105a5565b6112428682611aae565b61124c8484611aae565b111561128e5761125c8682611aae565b6112668484611aae565b604051632bab62d160e01b8152600481019290925260248201523060448201526064016105a5565b858311156112bf57604051632bab62d160e01b815260048101879052602481018490523060448201526064016105a5565b50019091555050565b5f7fde9bdca322e1a848f72215bc15cf2c87fe7749145789a9ee281a2a6290af26ab8260405160200161131792919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b604051602081830303815290604052805190602001209050919050565b61134061110b84610e9f565b61136f57604051631fe9beed60e21b81526001600160a01b0384166004820152602481018290526044016105a5565b61137a83838361148b565b816001600160a01b0316836001600160a01b03167ff7158d1591c2cf17c0e6b9459d86365c47fe0969c79f40ef49e0c437d8f39914836040516113bf91815260200190565b60405180910390a3505050565b5f6113d6836112c8565b919091555050565b5f81196113ea84610e9f565b1690506113f783826113cc565b826001600160a01b03167fccf920c8facee98a9c2a6c6124f2857b87b17e9f3a819bfcc6945196ee77366b836040516110a291815260200190565b8061143d848461149f565b146114755760405163018013f960e61b81526001600160a01b03808516600483015283166024820152604481018290526064016105a5565b61148083835f61148b565b6108488383836110ff565b5f61149684846114b4565b91909155505050565b5f806114ab84846114b4565b54949350505050565b5f7ff96e07b2f4fbb81c31567d2b261589af429e98f0958d53f7e6ad5d63aea0ab7c838360405160200161151193929190928352606091821b6bffffffffffffffffffffffff199081166020850152911b16603482015260480190565b60405160208183030381529060405280519060200120905092915050565b5f6020828403121561153f575f80fd5b5035919050565b6001600160a01b03811681146105b7575f80fd5b5f6020828403121561156a575f80fd5b813561098281611546565b5f8083601f840112611585575f80fd5b50813567ffffffffffffffff81111561159c575f80fd5b6020830191508360208285010111156115b3575f80fd5b9250929050565b5f805f604084860312156115cc575f80fd5b833567ffffffffffffffff8111156115e2575f80fd5b6115ee86828701611575565b909450925050602084013561160281611546565b809150509250925092565b5f5b8381101561162757818101518382015260200161160f565b50505f910152565b5f815180845261164681602086016020860161160d565b601f01601f19169290920160200192915050565b602081525f610982602083018461162f565b5f805f6060848603121561167e575f80fd5b833561168981611546565b9250602084013561169981611546565b929592945050506040919091013590565b5f80604083850312156116bb575f80fd5b82356116c681611546565b9150602083013560ff811681146116db575f80fd5b809150509250929050565b5f80602083850312156116f7575f80fd5b823567ffffffffffffffff81111561170d575f80fd5b61171985828601611575565b90969095509350505050565b5f8060208385031215611736575f80fd5b823567ffffffffffffffff81111561174c575f80fd5b8301601f8101851361175c575f80fd5b803567ffffffffffffffff811115611772575f80fd5b8560208260051b8401011115611786575f80fd5b6020919091019590945092505050565b5f602082016020835280845180835260408501915060408160051b8601019250602086015f5b828110156117ed57603f198786030184526117d885835161162f565b945060209384019391909101906001016117bc565b50929695505050505050565b5f806040838503121561180a575f80fd5b823561181581611546565b915060208301356116db81611546565b6001600160a01b0392909216825260ff16602082015260400190565b60408152826040820152828460608301375f60608483018101919091526001600160a01b03929092166020820152601f909201601f191690910101919050565b5f60208284031215611891575f80fd5b815161098281611546565b634e487b7160e01b5f52601160045260245ffd5b5f826118ca57634e487b7160e01b5f52601260045260245ffd5b500490565b634e487b7160e01b5f52604160045260245ffd5b5f82601f8301126118f2575f80fd5b813567ffffffffffffffff81111561190c5761190c6118cf565b604051601f8201601f19908116603f0116810167ffffffffffffffff8111828210171561193b5761193b6118cf565b604052818152838201602001851015611952575f80fd5b816020850160208301375f918101602001919091529392505050565b5f6020828403121561197e575f80fd5b813567ffffffffffffffff811115611994575f80fd5b610e3a848285016118e3565b5f602082840312156119b0575f80fd5b5051919050565b634e487b7160e01b5f52603260045260245ffd5b5f808335601e198436030181126119e0575f80fd5b83018035915067ffffffffffffffff8211156119fa575f80fd5b6020019150368190038213156115b3575f80fd5b818382375f9101908152919050565b5f8251611a2e81846020870161160d565b9190910192915050565b5f8060408385031215611a49575f80fd5b823567ffffffffffffffff811115611a5f575f80fd5b611a6b858286016118e3565b92505060208301356116db81611546565b5f60208284031215611a8c575f80fd5b81518015158114610982575f80fd5b8181038181111561090d5761090d61189c565b8082018082111561090d5761090d61189c56fe201b7a0b7c19aaddc4ce9579b7df8d2db123805861bc7763627f13e04d8af42fa164736f6c634300081a000a",
    "sourceMap": "500:1032:151:-:0;;;546:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;618:4:23;586:37;;604:23:151;-1:-1:-1;;;;;1694:37:44;;1690:74;;1740:24;;-1:-1:-1;;;1740:24:44;;;;;;;;;;;1690:74;-1:-1:-1;;;;;1775:48:44;;;-1:-1:-1;500:1032:151;;14:290:154;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:154;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:154:o;:::-;500:1032:151;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101ba575f3560e01c80638291286c116100f2578063adc0dc3b11610092578063deb11e7811610062578063deb11e78146104e2578063deb764f514610501578063e915cfd114610520578063f5983e831461053f575f80fd5b8063adc0dc3b14610466578063b555943d14610485578063da4886df146104a4578063dce29136146104c3575f80fd5b80639d76ea58116100cd5780639d76ea58146103f45780639ded06df14610408578063a56dbe6314610427578063ac9650d814610446575f80fd5b80638291286c146103835780638b38b35d146103b557806395a8c58d146103d5575f80fd5b80633416794d1161015d5780636bec32da116101385780636bec32da146103025780636d70f7ae146103215780636f3eef62146103505780637dbab19b1461036f575f80fd5b80633416794d146102c45780634a6a42d8146102e35780634fdf7cb51461024e575f80fd5b8063129d818811610198578063129d81881461024e5780631c53d26514610270578063274158381461029c5780632f3c7888146102b0575f80fd5b806309c6bed9146101be57806310d8d8e31461020e578063120a63b51461022f575b5f80fd5b3480156101c9575f80fd5b506101f17f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b348015610219575f80fd5b5061022d61022836600461152f565b61055e565b005b34801561023a575f80fd5b5061022d61024936600461155a565b6105ba565b348015610259575f80fd5b50610262610605565b604051908152602001610205565b34801561027b575f80fd5b5061028f61028a3660046115ba565b61061f565b604051610205919061165a565b3480156102a7575f80fd5b5061022d61064e565b3480156102bb575f80fd5b5061026261076f565b3480156102cf575f80fd5b5061022d6102de36600461166c565b610791565b3480156102ee575f80fd5b5061022d6102fd36600461155a565b61084d565b34801561030d575f80fd5b5061022d61031c36600461166c565b610888565b34801561032c575f80fd5b5061034061033b36600461155a565b610901565b6040519015158152602001610205565b34801561035b575f80fd5b5061022d61036a36600461155a565b610913565b34801561037a575f80fd5b5061026261094e565b34801561038e575f80fd5b507fde5fa9c0ef6d18cdb8ef4461bfb45c94dc915629a2a1f311fb33838aff95436f610262565b3480156103c0575f80fd5b505f80516020611ac283398151915254610262565b3480156103e0575f80fd5b506103406103ef3660046116aa565b610968565b3480156103ff575f80fd5b506101f1610605565b348015610413575f80fd5b5061022d6104223660046116e6565b610989565b348015610432575f80fd5b5061022d61044136600461152f565b610a3f565b610459610454366004611725565b610ad7565b6040516102059190611796565b348015610471575f80fd5b5061022d6104803660046117f9565b610c08565b348015610490575f80fd5b5061026261049f36600461166c565b610c43565b3480156104af575f80fd5b5061022d6104be36600461155a565b610d52565b3480156104ce575f80fd5b5061022d6104dd36600461152f565b610d5e565b3480156104ed575f80fd5b506103406104fc36600461155a565b610db2565b34801561050c575f80fd5b5061026261051b36600461166c565b610dbe565b34801561052b575f80fd5b5061022d61053a36600461155a565b610df3565b34801561054a575f80fd5b506101f16105593660046116e6565b610e2d565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105ae57604051630d6c7be960e01b81523360048201526024015b60405180910390fd5b6105b781610e42565b50565b60016105d56105c833610e9f565b600160ff84161b16151590565b6105f657338160405163bb6c163960e01b81526004016105a5929190611825565b610601826002610eaa565b5050565b5f604051630280e1e560e61b815260040160405180910390fd5b606083838360405160200161063693929190611841565b60405160208183030381529060405290509392505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461069957604051630d6c7be960e01b81523360048201526024016105a5565b604080517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031660248201525f196044808301919091528251808303909101815260649091018252602080820180516001600160e01b031663095ea7b360e01b17905282516313aedd4b60e31b8152925161076d933092639d76ea58926004808401938290030181865afa15801561073a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061075e9190611881565b6001600160a01b031690610eba565b565b5f8061077d615460426118b0565b90505f61078982610f72565b549392505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107dc57604051630d6c7be960e01b81523360048201526024016105a5565b6040516001600160a01b03831660248201526044810182905261084890632770a7eb60e21b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526001600160a01b03851690610eba565b505050565b600161085b6105c833610e9f565b61087c57338160405163bb6c163960e01b81526004016105a5929190611825565b61060133836001610fc6565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108d357604051630d6c7be960e01b81523360048201526024016105a5565b6040516001600160a01b038316602482015260448101829052610848906340c10f1960e01b90606401610806565b5f61090d826001610968565b92915050565b60016109216105c833610e9f565b61094257338160405163bb6c163960e01b81526004016105a5929190611825565b61060133836001610fd7565b5f8061095c615460426118b0565b90505f61078982610fe8565b5f61098261097584610e9f565b600160ff85161b16151590565b9392505050565b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316036109d257604051635f886e9d60e11b815260040160405180910390fd5b5f6109df8284018461196e565b90505f81515f146109f6576109f382611022565b90505b610a0e8160015b600160ff919091161b60041761104f565b610a397f000000000000000000000000000000000000000000000000000000000000000060016109fd565b50505050565b6002610a4d6105c833610e9f565b610a6e57338160405163bb6c163960e01b81526004016105a5929190611825565b61060182306001600160a01b031663129d81886040518163ffffffff1660e01b8152600401602060405180830381865afa158015610aae573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ad291906119a0565b6110af565b60608167ffffffffffffffff811115610af257610af26118cf565b604051908082528060200260200182016040528015610b2557816020015b6060815260200190600190039081610b105790505b5090505f60605f5b84811015610bff5730868683818110610b4857610b486119b7565b9050602002810190610b5a91906119cb565b604051610b68929190611a0e565b5f60405180830381855af49150503d805f8114610ba0576040519150601f19603f3d011682016040523d82523d5f602084013e610ba5565b606091505b50909350915082610bd95781515f03610bd1576040516309ad446560e31b815260040160405180910390fd5b815182602001fd5b81848281518110610bec57610bec6119b7565b6020908102919091010152600101610b2d565b50505092915050565b6001610c166105c833610e9f565b610c3757338160405163bb6c163960e01b81526004016105a5929190611825565b610848838360046110ff565b6040516001600160a01b038381166024830152604482018390525f918291829190871690632770a7eb60e21b906064015b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051610cb29190611a1d565b5f604051808303815f865af19150503d805f8114610ceb576040519150601f19603f3d011682016040523d82523d5f602084013e610cf0565b606091505b509150915081610d345760405162461bcd60e51b815260206004820152600f60248201526e151153081b5a5b9d0819985a5b1959608a1b60448201526064016105a5565b80806020019051810190610d4891906119a0565b9695505050505050565b6105b781336001611155565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610da957604051630d6c7be960e01b81523360048201526024016105a5565b6105b781611166565b5f61090d826002610968565b6040516001600160a01b038381166024830152604482018390525f9182918291908716906340c10f1960e01b90606401610c74565b6001610e016105c833610e9f565b610e2257338160405163bb6c163960e01b81526004016105a5929190611825565b6106018260026111ae565b5f610e3a82840184611a38565b949350505050565b5f610e585f80516020611ac28339815191525490565b9050805f03610e65575050565b5f610e72615460426118b0565b90505f610e7e82610fe8565b90505f610e8a83610f72565b9050610e98848383886111be565b5050505050565b5f80610789836112c8565b61060182600160ff84161b61104f565b5f80836001600160a01b031683604051610ed49190611a1d565b5f604051808303815f865af19150503d805f8114610f0d576040519150601f19603f3d011682016040523d82523d5f602084013e610f12565b606091505b50915091505f828015610f3d575081511580610f3d575081806020019051810190610f3d9190611a7c565b9050801580610f5457506001600160a01b0385163b155b15610e985760405163022e258160e11b815260040160405180910390fd5b604080517fb221f782e2afd1b10c9284a915bb8aa319f8e6cc8d90aebea117327eafbd28c160208201529081018290525f906060015b60408051601f19818403018152919052805160209091012092915050565b6108488383600160ff85161b6110ff565b6108488383600160ff85161b611334565b604080517ff4ff4213eda59f47bb3fdf8cb7fcc07540628bdeb7f1aebcfe07049bbd9f634f60208201529081018290525f90606001610fa8565b5f8151601414611047578160405163d08dbec560e01b81526004016105a5919061165a565b506014015190565b5f8161105a84610e9f565b17905061106783826113cc565b826001600160a01b03167f34e73c57659d4b6809b53db4feee9b007b892e978114eda420d2991aba150143836040516110a291815260200190565b60405180910390a2505050565b5f80516020611ac2833981519152829055604080513381526020810184905282917f024e856c5f6f5e287ff2be13db089b016f28a6ebe6aaffdfb5fa5b902fdd366b910160405180910390a25050565b61111261110b84610e9f565b8216821490565b61114157604051631fe9beed60e21b81526001600160a01b0384166004820152602481018290526044016105a5565b61114b83826113de565b610848828261104f565b6108488383600160ff85161b611432565b5f61117c5f80516020611ac28339815191525490565b9050805f03611189575050565b5f611196615460426118b0565b90505f6111a282610f72565b90505f610e8a83610fe8565b61060182600160ff84161b6113de565b825482546111cd835f19611a9b565b8211156111fd57604051633428985b60e21b815260048101849052602481018390523060448201526064016105a5565b611208865f19611a9b565b8111156112385760405163a6413e8b60e01b815260048101879052602481018290523060448201526064016105a5565b6112428682611aae565b61124c8484611aae565b111561128e5761125c8682611aae565b6112668484611aae565b604051632bab62d160e01b8152600481019290925260248201523060448201526064016105a5565b858311156112bf57604051632bab62d160e01b815260048101879052602481018490523060448201526064016105a5565b50019091555050565b5f7fde9bdca322e1a848f72215bc15cf2c87fe7749145789a9ee281a2a6290af26ab8260405160200161131792919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b604051602081830303815290604052805190602001209050919050565b61134061110b84610e9f565b61136f57604051631fe9beed60e21b81526001600160a01b0384166004820152602481018290526044016105a5565b61137a83838361148b565b816001600160a01b0316836001600160a01b03167ff7158d1591c2cf17c0e6b9459d86365c47fe0969c79f40ef49e0c437d8f39914836040516113bf91815260200190565b60405180910390a3505050565b5f6113d6836112c8565b919091555050565b5f81196113ea84610e9f565b1690506113f783826113cc565b826001600160a01b03167fccf920c8facee98a9c2a6c6124f2857b87b17e9f3a819bfcc6945196ee77366b836040516110a291815260200190565b8061143d848461149f565b146114755760405163018013f960e61b81526001600160a01b03808516600483015283166024820152604481018290526064016105a5565b61148083835f61148b565b6108488383836110ff565b5f61149684846114b4565b91909155505050565b5f806114ab84846114b4565b54949350505050565b5f7ff96e07b2f4fbb81c31567d2b261589af429e98f0958d53f7e6ad5d63aea0ab7c838360405160200161151193929190928352606091821b6bffffffffffffffffffffffff199081166020850152911b16603482015260480190565b60405160208183030381529060405280519060200120905092915050565b5f6020828403121561153f575f80fd5b5035919050565b6001600160a01b03811681146105b7575f80fd5b5f6020828403121561156a575f80fd5b813561098281611546565b5f8083601f840112611585575f80fd5b50813567ffffffffffffffff81111561159c575f80fd5b6020830191508360208285010111156115b3575f80fd5b9250929050565b5f805f604084860312156115cc575f80fd5b833567ffffffffffffffff8111156115e2575f80fd5b6115ee86828701611575565b909450925050602084013561160281611546565b809150509250925092565b5f5b8381101561162757818101518382015260200161160f565b50505f910152565b5f815180845261164681602086016020860161160d565b601f01601f19169290920160200192915050565b602081525f610982602083018461162f565b5f805f6060848603121561167e575f80fd5b833561168981611546565b9250602084013561169981611546565b929592945050506040919091013590565b5f80604083850312156116bb575f80fd5b82356116c681611546565b9150602083013560ff811681146116db575f80fd5b809150509250929050565b5f80602083850312156116f7575f80fd5b823567ffffffffffffffff81111561170d575f80fd5b61171985828601611575565b90969095509350505050565b5f8060208385031215611736575f80fd5b823567ffffffffffffffff81111561174c575f80fd5b8301601f8101851361175c575f80fd5b803567ffffffffffffffff811115611772575f80fd5b8560208260051b8401011115611786575f80fd5b6020919091019590945092505050565b5f602082016020835280845180835260408501915060408160051b8601019250602086015f5b828110156117ed57603f198786030184526117d885835161162f565b945060209384019391909101906001016117bc565b50929695505050505050565b5f806040838503121561180a575f80fd5b823561181581611546565b915060208301356116db81611546565b6001600160a01b0392909216825260ff16602082015260400190565b60408152826040820152828460608301375f60608483018101919091526001600160a01b03929092166020820152601f909201601f191690910101919050565b5f60208284031215611891575f80fd5b815161098281611546565b634e487b7160e01b5f52601160045260245ffd5b5f826118ca57634e487b7160e01b5f52601260045260245ffd5b500490565b634e487b7160e01b5f52604160045260245ffd5b5f82601f8301126118f2575f80fd5b813567ffffffffffffffff81111561190c5761190c6118cf565b604051601f8201601f19908116603f0116810167ffffffffffffffff8111828210171561193b5761193b6118cf565b604052818152838201602001851015611952575f80fd5b816020850160208301375f918101602001919091529392505050565b5f6020828403121561197e575f80fd5b813567ffffffffffffffff811115611994575f80fd5b610e3a848285016118e3565b5f602082840312156119b0575f80fd5b5051919050565b634e487b7160e01b5f52603260045260245ffd5b5f808335601e198436030181126119e0575f80fd5b83018035915067ffffffffffffffff8211156119fa575f80fd5b6020019150368190038213156115b3575f80fd5b818382375f9101908152919050565b5f8251611a2e81846020870161160d565b9190910192915050565b5f8060408385031215611a49575f80fd5b823567ffffffffffffffff811115611a5f575f80fd5b611a6b858286016118e3565b92505060208301356116db81611546565b5f60208284031215611a8c575f80fd5b81518015158114610982575f80fd5b8181038181111561090d5761090d61189c565b8082018082111561090d5761090d61189c56fe201b7a0b7c19aaddc4ce9579b7df8d2db123805861bc7763627f13e04d8af42fa164736f6c634300081a000a",
    "sourceMap": "500:1032:151:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1357:47:44;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;178:32:154;;;160:51;;148:2;133:18;1357:47:44;;;;;;;;4970:91;;;;;;;;;;-1:-1:-1;4970:91:44;;;;;:::i;:::-;;:::i;:::-;;5798:151;;;;;;;;;;-1:-1:-1;5798:151:44;;;;;:::i;:::-;;:::i;2873:97::-;;;;;;;;;;;;;:::i;:::-;;;987:25:154;;;975:2;960:18;2873:97:44;841:177:154;8045:173:44;;;;;;;;;;-1:-1:-1;8045:173:44;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;7242:436::-;;;;;;;;;;;;;:::i;2354:252:46:-;;;;;;;;;;;;;:::i;9245:216:44:-;;;;;;;;;;-1:-1:-1;9245:216:44;;;;;:::i;:::-;;:::i;1066:164:47:-;;;;;;;;;;-1:-1:-1;1066:164:47;;;;;:::i;:::-;;:::i;8614:212:44:-;;;;;;;;;;-1:-1:-1;8614:212:44;;;;;:::i;:::-;;:::i;2136:123:47:-;;;;;;;;;;-1:-1:-1;2136:123:47;;;;;:::i;:::-;;:::i;:::-;;;3536:14:154;;3529:22;3511:41;;3499:2;3484:18;2136:123:47;3371:187:154;1429:162:47;;;;;;;;;;-1:-1:-1;1429:162:47;;;;;:::i;:::-;;:::i;2736:248:46:-;;;;;;;;;;;;;:::i;2176:98:44:-;;;;;;;;;;-1:-1:-1;1450:26:44;2176:98;;854:147:46;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;963:22:46;854:147;;1607:131:26;;;;;;;;;;-1:-1:-1;1607:131:26;;;;;:::i;:::-;;:::i;2532:102:44:-;;;;;;;;;;;;;:::i;4071:893::-;;;;;;;;;;-1:-1:-1;4071:893:44;;;;;:::i;:::-;;:::i;6934:212::-;;;;;;;;;;-1:-1:-1;6934:212:44;;;;;:::i;:::-;;:::i;748:640:24:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5417:176:44:-;;;;;;;;;;-1:-1:-1;5417:176:44;;;;;:::i;:::-;;:::i;1085:445:151:-;;;;;;;;;;-1:-1:-1;1085:445:151;;;;;:::i;:::-;;:::i;1793:136:47:-;;;;;;;;;;-1:-1:-1;1793:136:47;;;;;:::i;:::-;;:::i;5067:93:44:-;;;;;;;;;;-1:-1:-1;5067:93:44;;;;;:::i;:::-;;:::i;6532:130::-;;;;;;;;;;-1:-1:-1;6532:130:44;;;;;:::i;:::-;;:::i;638:441:151:-;;;;;;;;;;-1:-1:-1;638:441:151;;;;;:::i;:::-;;:::i;6161:157:44:-;;;;;;;;;;-1:-1:-1;6161:157:44;;;;;:::i;:::-;;:::i;3428:179::-;;;;;;;;;;-1:-1:-1;3428:179:44;;;;;:::i;:::-;;:::i;4970:91::-;1986:10;-1:-1:-1;;;;;2000:22:44;1986:36;;1982:71;;2031:22;;-1:-1:-1;;;2031:22:44;;2042:10;2031:22;;;160:51:154;133:18;;2031:22:44;;;;;;;;1982:71;5036:18:::1;5047:6;5036:10;:18::i;:::-;4970:91:::0;:::o;5798:151::-;5867:14;596:37:26;605:21;615:10;605:9;:21::i;:::-;7720:1;:9;;;;7704:26;:31;;;7606:136;596:37;591:80;;654:10;666:4;642:29;;-1:-1:-1;;;642:29:26;;;;;;;;;:::i;591:80::-;5894:48:44::1;5903:11:::0;5922:18:::1;5894:8;:48::i;:::-;5798:151:::0;;:::o;2873:97::-;2923:7;2949:14;;-1:-1:-1;;;2949:14:44;;;;;;;;;;;8045:173;8133:20;8186:9;;8197:13;8175:36;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8165:46;;8045:173;;;;;:::o;7242:436::-;1986:10;-1:-1:-1;;;;;2000:22:44;1986:36;;1982:71;;2031:22;;-1:-1:-1;;;2031:22:44;;2042:10;2031:22;;;160:51:154;133:18;;2031:22:44;14:203:154;1982:71:44;7586:84:::1;::::0;;7634:22:::1;-1:-1:-1::0;;;;;7299:32:154;7586:84:44::1;::::0;::::1;7281:51:154::0;-1:-1:-1;;7348:18:154;;;;7341:34;;;;7586:84:44;;;;;;;;;;7254:18:154;;;;7586:84:44;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;7586:84:44::1;-1:-1:-1::0;;;7586:84:44::1;::::0;;7556:19;;-1:-1:-1;;;7556:19:44;;;;7549:122:::1;::::0;7556:4:::1;::::0;:17:::1;::::0;:19:::1;::::0;;::::1;::::0;;;;;;:4;:19:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;7549:36:44::1;::::0;::::1;:122::i;:::-;7242:436::o:0;2354:252:46:-;2402:22;;2452:28;721:7;2452:15;:28;:::i;:::-;2436:44;;2490:12;2505:22;2521:5;2505:15;:22::i;:::-;2579:11;;2354:252;-1:-1:-1;;;2354:252:46:o;9245:216:44:-;1986:10;-1:-1:-1;;;;;2000:22:44;1986:36;;1982:71;;2031:22;;-1:-1:-1;;;2031:22:44;;2042:10;2031:22;;;160:51:154;133:18;;2031:22:44;14:203:154;1982:71:44;9379:74:::1;::::0;-1:-1:-1;;;;;7299:32:154;;9379:74:44::1;::::0;::::1;7281:51:154::0;7348:18;;;7341:34;;;9348:106:44::1;::::0;-1:-1:-1;;;9402:36:44;7254:18:154;;9379:74:44::1;;::::0;;-1:-1:-1;;9379:74:44;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;9379:74:44::1;-1:-1:-1::0;;;;;;9379:74:44;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;;;;;9348:30:44;::::1;::::0;::::1;:106::i;:::-;9245:216:::0;;;:::o;1066:164:47:-;1138:14;596:37:26;605:21;615:10;605:9;:21::i;596:37::-;591:80;;654:10;666:4;642:29;;-1:-1:-1;;;642:29:26;;;;;;;;;:::i;591:80::-;1165:58:47::1;1179:10;1191:8:::0;1207:14:::1;1165:13;:58::i;8614:212:44:-:0;1986:10;-1:-1:-1;;;;;2000:22:44;1986:36;;1982:71;;2031:22;;-1:-1:-1;;;2031:22:44;;2042:10;2031:22;;;160:51:154;133:18;;2031:22:44;14:203:154;1982:71:44;8746:72:::1;::::0;-1:-1:-1;;;;;7299:32:154;;8746:72:44::1;::::0;::::1;7281:51:154::0;7348:18;;;7341:34;;;8715:104:44::1;::::0;-1:-1:-1;;;8769:36:44;7254:18:154;;8746:72:44::1;7107:274:154::0;2136:123:47;2193:4;2216:36;2224:4;2236:14;1607:131:26;:::i;2216:36:47:-;2209:43;2136:123;-1:-1:-1;;2136:123:47:o;1429:162::-;1500:14;596:37:26;605:21;615:10;605:9;:21::i;596:37::-;591:80;;654:10;666:4;642:29;;-1:-1:-1;;;642:29:26;;;;;;;;;:::i;591:80::-;1527:57:47::1;1540:10;1552:8:::0;1568:14:::1;1527:12;:57::i;2736:248:46:-:0;2783:21;;2832:28;721:7;2832:15;:28;:::i;:::-;2816:44;;2870:12;2885:21;2900:5;2885:14;:21::i;1607:131:26:-;1674:4;1697:34;1706:18;1716:7;1706:9;:18::i;:::-;7720:1;:9;;;;7704:26;:31;;;7606:136;1697:34;1690:41;1607:131;-1:-1:-1;;;1607:131:26:o;4071:893:44:-;886:4:23;853:21;-1:-1:-1;;;;;853:38:23;;849:61;;900:10;;-1:-1:-1;;;900:10:23;;;;;;;;;;;849:61;4181:26:44::1;4210:28;::::0;;::::1;4221:7:::0;4210:28:::1;:::i;:::-;4181:57;;4249:16;4293:13;:20;4317:1;4293:25;4289:92;;4345:25;:13;:23;:25::i;:::-;4334:36;;4289:92;4565:91;4582:8:::0;4639:14:::1;4633:21;4628:1;:26;::::0;;;::::1;;4593:30:::0;4592:63:::1;4565:16;:91::i;:::-;4852:105;4869:22;4940:14;4934:21;::::0;4852:105:::1;4171:793;;4071:893:::0;;:::o;6934:212::-;7000:18;596:37:26;605:21;615:10;605:9;:21::i;596:37::-;591:80;;654:10;666:4;642:29;;-1:-1:-1;;;642:29:26;;;;;;;;;:::i;591:80::-;7088:51:44::1;7102:10;7114:4;-1:-1:-1::0;;;;;7114:22:44::1;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7088:13;:51::i;748:640:24:-:0;814:22;870:4;858:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;848:34;;892:12;914:19;948:9;943:439;963:15;;;943:439;;;1097:4;1116;;1121:1;1116:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1089:35;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1069:55:24;;-1:-1:-1;1069:55:24;-1:-1:-1;1069:55:24;1139:199;;1175:6;:13;1192:1;1175:18;1171:48;;1202:17;;-1:-1:-1;;;1202:17:24;;;;;;;;;;;1171:48;1298:6;1292:13;1283:6;1279:2;1275:15;1268:38;1139:199;1365:6;1352:7;1360:1;1352:10;;;;;;;;:::i;:::-;;;;;;;;;;:19;980:3;;943:439;;;;838:550;;748:640;;;;:::o;5417:176:44:-;5496:14;596:37:26;605:21;615:10;605:9;:21::i;596:37::-;591:80;;654:10;666:4;642:29;;-1:-1:-1;;;642:29:26;;;;;;;;;:::i;591:80::-;5523:63:44::1;5545:4:::0;5551:2;5555:30;5523:21:::1;:63::i;1085:445:151:-:0;1342:80;;-1:-1:-1;;;;;7299:32:154;;;1342:80:151;;;7281:51:154;7348:18;;;7341:34;;;1237:20:151;;;;;;1323:18;;;;-1:-1:-1;;;1365:36:151;7254:18:154;;1342:80:151;;;;-1:-1:-1;;1342:80:151;;;;;;;;;;;;;;-1:-1:-1;;;;;1342:80:151;-1:-1:-1;;;;;;1342:80:151;;;;;;;;;;1323:100;;;;1342:80;1323:100;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1273:150;;;;1441:7;1433:35;;;;-1:-1:-1;;;1433:35:151;;10800:2:154;1433:35:151;;;10782:21:154;10839:2;10819:18;;;10812:30;-1:-1:-1;;;10858:18:154;;;10851:45;10913:18;;1433:35:151;10598:339:154;1433:35:151;1505:6;1494:29;;;;;;;;;;;;:::i;:::-;1479:44;1085:445;-1:-1:-1;;;;;;1085:445:151:o;1793:136:47:-;1862:60;1874:12;1888:10;1906:14;1862:11;:60::i;5067:93:44:-;1986:10;-1:-1:-1;;;;;2000:22:44;1986:36;;1982:71;;2031:22;;-1:-1:-1;;;2031:22:44;;2042:10;2031:22;;;160:51:154;133:18;;2031:22:44;14:203:154;1982:71:44;5134:19:::1;5146:6;5134:11;:19::i;6532:130::-:0;6592:4;6615:40;6623:4;6635:18;1607:131:26;:::i;638:441:151:-;893:78;;-1:-1:-1;;;;;7299:32:154;;;893:78:151;;;7281:51:154;7348:18;;;7341:34;;;788:20:151;;;;;;874:18;;;;-1:-1:-1;;;916:36:151;7254:18:154;;893:78:151;7107:274:154;6161:157:44;6233:14;596:37:26;605:21;615:10;605:9;:21::i;596:37::-;591:80;;654:10;666:4;642:29;;-1:-1:-1;;;642:29:26;;;;;;;;;:::i;591:80::-;6260:51:44::1;6272:11:::0;6291:18:::1;6260:11;:51::i;3428:179::-:0;3510:21;3563:37;;;;3574:7;3563:37;:::i;:::-;3543:57;3428:179;-1:-1:-1;;;;3428:179:44:o;4917:372:46:-;4979:18;5000:11;-1:-1:-1;;;;;;;;;;;963:22:46;;854:147;5000:11;4979:32;;5025:10;5039:1;5025:15;5021:28;;5042:7;4917:372;:::o;5021:28::-;5059:13;5075:28;721:7;5075:15;:28;:::i;:::-;5059:44;;5113:17;5133:21;5148:5;5133:14;:21::i;:::-;5113:41;;5164:21;5188:22;5204:5;5188:15;:22::i;:::-;5164:46;;5221:61;5230:10;5242:9;5253:13;5268;5221:8;:61::i;:::-;4969:320;;;;4917:372;:::o;2781:198:26:-;2840:20;2872:11;2886:18;2896:7;2886:9;:18::i;5123:109::-;5189:36;5206:7;5215:1;:9;;;;5189:16;:36::i;518:351:22:-;593:12;607:23;642:5;-1:-1:-1;;;;;634:19:22;654:8;634:29;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;592:71;;;;673:16;692:7;:78;;;;-1:-1:-1;704:17:22;;:31;;:65;;;750:10;739:30;;;;;;;;;;;;:::i;:::-;673:97;;786:11;785:12;:47;;;-1:-1:-1;;;;;;801:26:22;;;:31;785:47;781:81;;;841:21;;-1:-1:-1;;;841:21:22;;;;;;;;;;;1664:162:46;1776:41;;;554:28;1776:41;;;12055:25:154;12096:18;;;12089:34;;;1727:12:46;;12028:18:154;;1776:41:46;;;;-1:-1:-1;;1776:41:46;;;;;;;;;1766:52;;1776:41;1766:52;;;;;1664:162;-1:-1:-1;;1664:162:46:o;13083:187:26:-;13207:56;13229:11;13242:9;13253:1;:9;;;;13207:21;:56::i;9214:185::-;9337:55;9358:11;9371:9;9382:1;:9;;;;9337:20;:55::i;2061:160:46:-;2172:40;;;647:27;2172:40;;;12055:25:154;12096:18;;;12089:34;;;2123:12:46;;12028:18:154;;2172:40:46;11881:248:154;443:249:21;512:12;540;:19;563:2;540:25;536:70;;593:12;574:32;;-1:-1:-1;;;574:32:21;;;;;;;;:::i;536:70::-;-1:-1:-1;672:2:21;654:21;648:28;;443:249::o;5916:245:26:-;6000:23;6047:12;6026:18;6036:7;6026:9;:18::i;:::-;:33;6000:59;;6070:35;6080:7;6089:15;6070:9;:35::i;:::-;6132:7;-1:-1:-1;;;;;6121:33:26;;6141:12;6121:33;;;;987:25:154;;975:2;960:18;;841:177;6121:33:26;;;;;;;;5990:171;5916:245;;:::o;1209:214:46:-;-1:-1:-1;;;;;;;;;;;1311:35:46;;;1371:45;;;1393:10;7281:51:154;;7363:2;7348:18;;7341:34;;;1384:7:46;;1371:45;;7254:18:154;1371:45:46;;;;;;;1209:214;;:::o;14138:366:26:-;14285:53;14301:22;14311:11;14301:9;:22::i;:::-;8176:38;;8175:64;;;8049:197;14285:53;14280:109;;14347:42;;-1:-1:-1;;;14347:42:26;;-1:-1:-1;;;;;7299:32:154;;14347:42:26;;;7281:51:154;7348:18;;;7341:34;;;7254:18;;14347:42:26;7107:274:154;14280:109:26;14400:46;14420:11;14433:12;14400:19;:46::i;:::-;14456:41;14473:9;14484:12;14456:16;:41::i;11266:191::-;11396:54;11416:11;11429:9;11440:1;:9;;;;11396:19;:54::i;4427:375:46:-;4491:18;4512:11;-1:-1:-1;;;;;;;;;;;963:22:46;;854:147;4512:11;4491:32;;4537:10;4551:1;4537:15;4533:28;;4554:7;4427:375;:::o;4533:28::-;4571:13;4587:28;721:7;4587:15;:28;:::i;:::-;4571:44;;4625:17;4645:22;4661:5;4645:15;:22::i;:::-;4625:42;;4677:21;4701;4716:5;4701:14;:21::i;6386:115:26:-;6455:39;6475:7;6484:1;:9;;;;6455:19;:39::i;3313:996:46:-;3527:16;;3573:20;;3714:30;3734:10;-1:-1:-1;;3714:30:46;:::i;:::-;3702:9;:42;3698:113;;;3753:58;;-1:-1:-1;;;3753:58:46;;;;;12469:25:154;;;12510:18;;;12503:34;;;3805:4:46;12553:18:154;;;12546:60;12442:18;;3753:58:46;12267:345:154;3698:113:46;3841:30;3861:10;-1:-1:-1;;3841:30:46;:::i;:::-;3825:13;:46;3821:118;;;3880:59;;-1:-1:-1;;;3880:59:46;;;;;12469:25:154;;;12510:18;;;12503:34;;;3933:4:46;12553:18:154;;;12546:60;12442:18;;3880:59:46;12267:345:154;3821:118:46;3979:26;3995:10;3979:13;:26;:::i;:::-;3954:22;3966:10;3954:9;:22;:::i;:::-;:51;3950:162;;;4045:26;4061:10;4045:13;:26;:::i;:::-;4074:22;4086:10;4074:9;:22;:::i;:::-;4026:86;;-1:-1:-1;;;4026:86:46;;;;;12469:25:154;;;;12510:18;;;12503:34;4106:4:46;12553:18:154;;;12546:60;12442:18;;4026:86:46;12267:345:154;3950:162:46;4139:10;4126;:23;4122:92;;;4158:56;;-1:-1:-1;;;4158:56:46;;;;;12469:25:154;;;12510:18;;;12503:34;;;4208:4:46;12553:18:154;;;12546:60;12442:18;;4158:56:46;12267:345:154;4122:92:46;-1:-1:-1;4266:26:46;4248:45;;;-1:-1:-1;;3313:996:46:o;2414:154:26:-;2481:11;341:18;2552:7;2521:39;;;;;;;;12904:19:154;;;12961:2;12957:15;-1:-1:-1;;12953:53:154;12948:2;12939:12;;12932:75;13032:2;13023:12;;12747:294;2521:39:26;;;;;;;;;;;;;2511:50;;;;;;2504:57;;2414:154;;;:::o;10555:390::-;10701:53;10717:22;10727:11;10717:9;:22::i;10701:53::-;10696:109;;10763:42;;-1:-1:-1;;;10763:42:26;;-1:-1:-1;;;;;7299:32:154;;10763:42:26;;;7281:51:154;7348:18;;;7341:34;;;7254:18;;10763:42:26;7107:274:154;10696:109:26;10816:55;10834:11;10847:9;10858:12;10816:17;:55::i;:::-;10914:9;-1:-1:-1;;;;;10887:51:26;10901:11;-1:-1:-1;;;;;10887:51:26;;10925:12;10887:51;;;;987:25:154;;975:2;960:18;;841:177;10887:51:26;;;;;;;;10555:390;;;:::o;3165:182::-;3241:11;3255:18;3265:7;3255:9;:18::i;:::-;3306:25;;;;-1:-1:-1;;3165:182:26:o;7093:251::-;7180:23;7228:12;7227:13;7206:18;7216:7;7206:9;:18::i;:::-;:34;7180:60;;7251:35;7261:7;7270:15;7251:9;:35::i;:::-;7315:7;-1:-1:-1;;;;;7302:35:26;;7324:12;7302:35;;;;987:25:154;;975:2;960:18;;841:177;12333:431:26;12530:12;12485:41;12503:11;12516:9;12485:17;:41::i;:::-;:57;12481:153;;12565:58;;-1:-1:-1;;;12565:58:26;;-1:-1:-1;;;;;13266:32:154;;;12565:58:26;;;13248:51:154;13335:32;;13315:18;;;13308:60;13384:18;;;13377:34;;;13221:18;;12565:58:26;13046:371:154;12481:153:26;12644:44;12662:11;12675:9;12686:1;12644:17;:44::i;:::-;12698:59;12720:11;12733:9;12744:12;12698:21;:59::i;4648:265::-;4787:11;4801:36;4814:11;4827:9;4801:12;:36::i;:::-;4870:27;;;;-1:-1:-1;;;4648:265:26:o;4114:251::-;4204:22;4238:11;4252:36;4265:11;4278:9;4252:12;:36::i;:::-;4339:10;;4114:251;-1:-1:-1;;;;4114:251:26:o;3619:203::-;3712:11;414:26;3791:11;3804:9;3752:62;;;;;;;;;13607:19:154;;;13664:2;13660:15;;;-1:-1:-1;;13656:53:154;;;13651:2;13642:12;;13635:75;13744:15;;13740:53;13735:2;13726:12;;13719:75;13819:2;13810:12;;13422:406;3752:62:26;;;;;;;;;;;;;3742:73;;;;;;3735:80;;3619:203;;;;:::o;222:226:154:-;281:6;334:2;322:9;313:7;309:23;305:32;302:52;;;350:1;347;340:12;302:52;-1:-1:-1;395:23:154;;222:226;-1:-1:-1;222:226:154:o;453:131::-;-1:-1:-1;;;;;528:31:154;;518:42;;508:70;;574:1;571;564:12;589:247;648:6;701:2;689:9;680:7;676:23;672:32;669:52;;;717:1;714;707:12;669:52;756:9;743:23;775:31;800:5;775:31;:::i;1023:347::-;1074:8;1084:6;1138:3;1131:4;1123:6;1119:17;1115:27;1105:55;;1156:1;1153;1146:12;1105:55;-1:-1:-1;1179:20:154;;1222:18;1211:30;;1208:50;;;1254:1;1251;1244:12;1208:50;1291:4;1283:6;1279:17;1267:29;;1343:3;1336:4;1327:6;1319;1315:19;1311:30;1308:39;1305:59;;;1360:1;1357;1350:12;1305:59;1023:347;;;;;:::o;1375:544::-;1454:6;1462;1470;1523:2;1511:9;1502:7;1498:23;1494:32;1491:52;;;1539:1;1536;1529:12;1491:52;1579:9;1566:23;1612:18;1604:6;1601:30;1598:50;;;1644:1;1641;1634:12;1598:50;1683:58;1733:7;1724:6;1713:9;1709:22;1683:58;:::i;:::-;1760:8;;-1:-1:-1;1657:84:154;-1:-1:-1;;1845:2:154;1830:18;;1817:32;1858:31;1817:32;1858:31;:::i;:::-;1908:5;1898:15;;;1375:544;;;;;:::o;1924:250::-;2009:1;2019:113;2033:6;2030:1;2027:13;2019:113;;;2109:11;;;2103:18;2090:11;;;2083:39;2055:2;2048:10;2019:113;;;-1:-1:-1;;2166:1:154;2148:16;;2141:27;1924:250::o;2179:270::-;2220:3;2258:5;2252:12;2285:6;2280:3;2273:19;2301:76;2370:6;2363:4;2358:3;2354:14;2347:4;2340:5;2336:16;2301:76;:::i;:::-;2431:2;2410:15;-1:-1:-1;;2406:29:154;2397:39;;;;2438:4;2393:50;;2179:270;-1:-1:-1;;2179:270:154:o;2454:217::-;2601:2;2590:9;2583:21;2564:4;2621:44;2661:2;2650:9;2646:18;2638:6;2621:44;:::i;2858:508::-;2935:6;2943;2951;3004:2;2992:9;2983:7;2979:23;2975:32;2972:52;;;3020:1;3017;3010:12;2972:52;3059:9;3046:23;3078:31;3103:5;3078:31;:::i;:::-;3128:5;-1:-1:-1;3185:2:154;3170:18;;3157:32;3198:33;3157:32;3198:33;:::i;:::-;2858:508;;3250:7;;-1:-1:-1;;;3330:2:154;3315:18;;;;3302:32;;2858:508::o;3563:412::-;3629:6;3637;3690:2;3678:9;3669:7;3665:23;3661:32;3658:52;;;3706:1;3703;3696:12;3658:52;3745:9;3732:23;3764:31;3789:5;3764:31;:::i;:::-;3814:5;-1:-1:-1;3871:2:154;3856:18;;3843:32;3919:4;3906:18;;3894:31;;3884:59;;3939:1;3936;3929:12;3884:59;3962:7;3952:17;;;3563:412;;;;;:::o;3980:409::-;4050:6;4058;4111:2;4099:9;4090:7;4086:23;4082:32;4079:52;;;4127:1;4124;4117:12;4079:52;4167:9;4154:23;4200:18;4192:6;4189:30;4186:50;;;4232:1;4229;4222:12;4186:50;4271:58;4321:7;4312:6;4301:9;4297:22;4271:58;:::i;:::-;4348:8;;4245:84;;-1:-1:-1;3980:409:154;-1:-1:-1;;;;3980:409:154:o;4394:621::-;4491:6;4499;4552:2;4540:9;4531:7;4527:23;4523:32;4520:52;;;4568:1;4565;4558:12;4520:52;4608:9;4595:23;4641:18;4633:6;4630:30;4627:50;;;4673:1;4670;4663:12;4627:50;4696:22;;4749:4;4741:13;;4737:27;-1:-1:-1;4727:55:154;;4778:1;4775;4768:12;4727:55;4818:2;4805:16;4844:18;4836:6;4833:30;4830:50;;;4876:1;4873;4866:12;4830:50;4929:7;4924:2;4914:6;4911:1;4907:14;4903:2;4899:23;4895:32;4892:45;4889:65;;;4950:1;4947;4940:12;4889:65;4981:2;4973:11;;;;;5003:6;;-1:-1:-1;4394:621:154;-1:-1:-1;;;4394:621:154:o;5020:779::-;5180:4;5228:2;5217:9;5213:18;5258:2;5247:9;5240:21;5281:6;5316;5310:13;5347:6;5339;5332:22;5385:2;5374:9;5370:18;5363:25;;5447:2;5437:6;5434:1;5430:14;5419:9;5415:30;5411:39;5397:53;;5485:2;5477:6;5473:15;5506:1;5516:254;5530:6;5527:1;5524:13;5516:254;;;5623:2;5619:7;5607:9;5599:6;5595:22;5591:36;5586:3;5579:49;5651:39;5683:6;5674;5668:13;5651:39;:::i;:::-;5641:49;-1:-1:-1;5725:2:154;5748:12;;;;5713:15;;;;;5552:1;5545:9;5516:254;;;-1:-1:-1;5787:6:154;;5020:779;-1:-1:-1;;;;;;5020:779:154:o;5804:388::-;5872:6;5880;5933:2;5921:9;5912:7;5908:23;5904:32;5901:52;;;5949:1;5946;5939:12;5901:52;5988:9;5975:23;6007:31;6032:5;6007:31;:::i;:::-;6057:5;-1:-1:-1;6114:2:154;6099:18;;6086:32;6127:33;6086:32;6127:33;:::i;6329:281::-;-1:-1:-1;;;;;6517:32:154;;;;6499:51;;6598:4;6586:17;6581:2;6566:18;;6559:45;6487:2;6472:18;;6329:281::o;6615:487::-;6800:2;6789:9;6782:21;6839:6;6834:2;6823:9;6819:18;6812:34;6896:6;6888;6883:2;6872:9;6868:18;6855:48;6952:1;6947:2;6923:22;;;6919:31;;6912:42;;;;-1:-1:-1;;;;;7063:32:154;;;;7056:4;7041:20;;7034:62;7015:2;6994:15;;;-1:-1:-1;;6990:29:154;6975:45;;;6971:54;;;-1:-1:-1;6615:487:154:o;7386:251::-;7456:6;7509:2;7497:9;7488:7;7484:23;7480:32;7477:52;;;7525:1;7522;7515:12;7477:52;7557:9;7551:16;7576:31;7601:5;7576:31;:::i;7642:127::-;7703:10;7698:3;7694:20;7691:1;7684:31;7734:4;7731:1;7724:15;7758:4;7755:1;7748:15;7774:217;7814:1;7840;7830:132;;7884:10;7879:3;7875:20;7872:1;7865:31;7919:4;7916:1;7909:15;7947:4;7944:1;7937:15;7830:132;-1:-1:-1;7976:9:154;;7774:217::o;7996:127::-;8057:10;8052:3;8048:20;8045:1;8038:31;8088:4;8085:1;8078:15;8112:4;8109:1;8102:15;8128:725;8170:5;8223:3;8216:4;8208:6;8204:17;8200:27;8190:55;;8241:1;8238;8231:12;8190:55;8281:6;8268:20;8311:18;8303:6;8300:30;8297:56;;;8333:18;;:::i;:::-;8382:2;8376:9;8474:2;8436:17;;-1:-1:-1;;8432:31:154;;;8465:2;8428:40;8424:54;8412:67;;8509:18;8494:34;;8530:22;;;8491:62;8488:88;;;8556:18;;:::i;:::-;8592:2;8585:22;8616;;;8657:19;;;8678:4;8653:30;8650:39;-1:-1:-1;8647:59:154;;;8702:1;8699;8692:12;8647:59;8766:6;8759:4;8751:6;8747:17;8740:4;8732:6;8728:17;8715:58;8821:1;8793:19;;;8814:4;8789:30;8782:41;;;;8797:6;8128:725;-1:-1:-1;;;8128:725:154:o;8858:320::-;8926:6;8979:2;8967:9;8958:7;8954:23;8950:32;8947:52;;;8995:1;8992;8985:12;8947:52;9035:9;9022:23;9068:18;9060:6;9057:30;9054:50;;;9100:1;9097;9090:12;9054:50;9123:49;9164:7;9155:6;9144:9;9140:22;9123:49;:::i;9183:184::-;9253:6;9306:2;9294:9;9285:7;9281:23;9277:32;9274:52;;;9322:1;9319;9312:12;9274:52;-1:-1:-1;9345:16:154;;9183:184;-1:-1:-1;9183:184:154:o;9372:127::-;9433:10;9428:3;9424:20;9421:1;9414:31;9464:4;9461:1;9454:15;9488:4;9485:1;9478:15;9504:521;9581:4;9587:6;9647:11;9634:25;9741:2;9737:7;9726:8;9710:14;9706:29;9702:43;9682:18;9678:68;9668:96;;9760:1;9757;9750:12;9668:96;9787:33;;9839:20;;;-1:-1:-1;9882:18:154;9871:30;;9868:50;;;9914:1;9911;9904:12;9868:50;9947:4;9935:17;;-1:-1:-1;9978:14:154;9974:27;;;9964:38;;9961:58;;;10015:1;10012;10005:12;10030:271;10213:6;10205;10200:3;10187:33;10169:3;10239:16;;10264:13;;;10239:16;10030:271;-1:-1:-1;10030:271:154:o;10306:287::-;10435:3;10473:6;10467:13;10489:66;10548:6;10543:3;10536:4;10528:6;10524:17;10489:66;:::i;:::-;10571:16;;;;;10306:287;-1:-1:-1;;10306:287:154:o;11131:463::-;11216:6;11224;11277:2;11265:9;11256:7;11252:23;11248:32;11245:52;;;11293:1;11290;11283:12;11245:52;11333:9;11320:23;11366:18;11358:6;11355:30;11352:50;;;11398:1;11395;11388:12;11352:50;11421:49;11462:7;11453:6;11442:9;11438:22;11421:49;:::i;:::-;11411:59;;;11520:2;11509:9;11505:18;11492:32;11533:31;11558:5;11533:31;:::i;11599:277::-;11666:6;11719:2;11707:9;11698:7;11694:23;11690:32;11687:52;;;11735:1;11732;11725:12;11687:52;11767:9;11761:16;11820:5;11813:13;11806:21;11799:5;11796:32;11786:60;;11842:1;11839;11832:12;12134:128;12201:9;;;12222:11;;;12219:37;;;12236:18;;:::i;12617:125::-;12682:9;;;12703:10;;;12700:36;;;12716:18;;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "1615": [{ "start": 2444, "length": 32 }],
      "3827": [
        { "start": 463, "length": 32 },
        { "start": 1385, "length": 32 },
        { "start": 1625, "length": 32 },
        { "start": 1695, "length": 32 },
        { "start": 1948, "length": 32 },
        { "start": 2195, "length": 32 },
        { "start": 2579, "length": 32 },
        { "start": 3433, "length": 32 }
      ]
    }
  },
  "methodIdentifiers": {
    "acceptOperatorship(address)": "da4886df",
    "addFlowIn(uint256)": "10d8d8e3",
    "addFlowLimiter(address)": "120a63b5",
    "addFlowOut(uint256)": "dce29136",
    "approveService()": "27415838",
    "burnToken(address,address,uint256)": "3416794d",
    "burnTokenWithReturn(address,address,uint256)": "b555943d",
    "contractId()": "8291286c",
    "flowInAmount()": "7dbab19b",
    "flowLimit()": "8b38b35d",
    "flowOutAmount()": "2f3c7888",
    "getTokenAddressFromParams(bytes)": "f5983e83",
    "hasRole(address,uint8)": "95a8c58d",
    "implementationType()": "4fdf7cb5",
    "interchainTokenId()": "129d8188",
    "interchainTokenService()": "09c6bed9",
    "isFlowLimiter(address)": "deb11e78",
    "isOperator(address)": "6d70f7ae",
    "mintToken(address,address,uint256)": "6bec32da",
    "mintTokenWithReturn(address,address,uint256)": "deb764f5",
    "multicall(bytes[])": "ac9650d8",
    "params(bytes,address)": "1c53d265",
    "proposeOperatorship(address)": "6f3eef62",
    "removeFlowLimiter(address)": "e915cfd1",
    "setFlowLimit(uint256)": "a56dbe63",
    "setup(bytes)": "9ded06df",
    "tokenAddress()": "9d76ea58",
    "transferFlowLimiter(address,address)": "adc0dc3b",
    "transferOperatorship(address)": "4a6a42d8"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"interchainTokenService_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"flowLimiter\",\"type\":\"address\"}],\"name\":\"AlreadyFlowLimiter\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"flowAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flowToAdd\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenManager\",\"type\":\"address\"}],\"name\":\"FlowAdditionOverflow\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flowAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenManager\",\"type\":\"address\"}],\"name\":\"FlowLimitExceeded\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"flowLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flowToCompare\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenManager\",\"type\":\"address\"}],\"name\":\"FlowLimitOverflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GiveTokenFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"bytesAddress\",\"type\":\"bytes\"}],\"name\":\"InvalidBytesLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromAccount\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toAccount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"accountRoles\",\"type\":\"uint256\"}],\"name\":\"InvalidProposedRoles\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"accountRoles\",\"type\":\"uint256\"}],\"name\":\"MissingAllRoles\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"accountRoles\",\"type\":\"uint256\"}],\"name\":\"MissingAnyOfRoles\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"role\",\"type\":\"uint8\"}],\"name\":\"MissingRole\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MulticallFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"flowLimiter\",\"type\":\"address\"}],\"name\":\"NotFlowLimiter\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotProxy\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"NotService\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotSupported\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"NotToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TakeTokenFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenLinkerZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"flowLimit_\",\"type\":\"uint256\"}],\"name\":\"FlowLimitSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"accountRoles\",\"type\":\"uint256\"}],\"name\":\"RolesAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"accountRoles\",\"type\":\"uint256\"}],\"name\":\"RolesProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"accountRoles\",\"type\":\"uint256\"}],\"name\":\"RolesRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromOperator\",\"type\":\"address\"}],\"name\":\"acceptOperatorship\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addFlowIn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"flowLimiter\",\"type\":\"address\"}],\"name\":\"addFlowLimiter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addFlowOut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveService\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nativeAmount\",\"type\":\"uint256\"}],\"name\":\"burnTokenWithReturn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"burnedAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flowInAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"flowInAmount_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flowLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"flowLimit_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flowOutAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"flowOutAmount_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"params_\",\"type\":\"bytes\"}],\"name\":\"getTokenAddressFromParams\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"role\",\"type\":\"uint8\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementationType\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"interchainTokenId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"interchainTokenService\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isFlowLimiter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"originAmount\",\"type\":\"uint256\"}],\"name\":\"mintTokenWithReturn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"mintedAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"operator_\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"}],\"name\":\"params\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"params_\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"proposeOperatorship\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"flowLimiter\",\"type\":\"address\"}],\"name\":\"removeFlowLimiter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"flowLimit_\",\"type\":\"uint256\"}],\"name\":\"setFlowLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"params_\",\"type\":\"bytes\"}],\"name\":\"setup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferFlowLimiter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"transferOperatorship\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptOperatorship(address)\":{\"details\":\"Can only be called by the proposed operator.\",\"params\":{\"fromOperator\":\"The previous operator of the contract.\"}},\"addFlowLimiter(address)\":{\"details\":\"Can only be called by the operator.\",\"params\":{\"flowLimiter\":\"the address of the new flow limiter.\"}},\"burnToken(address,address,uint256)\":{\"details\":\"This function should revert if called by anyone but the service.\",\"params\":{\"amount\":\"The amount to burn.\",\"from\":\"The address to burn the token from.\",\"tokenAddress_\":\"The address of the token, since its cheaper to pass it in instead of reading it as the token manager.\"}},\"contractId()\":{\"returns\":{\"_0\":\"bytes32 The contract id.\"}},\"flowInAmount()\":{\"returns\":{\"flowInAmount_\":\"The current flow in amount.\"}},\"flowLimit()\":{\"returns\":{\"flowLimit_\":\"The current flow limit value.\"}},\"flowOutAmount()\":{\"returns\":{\"flowOutAmount_\":\"The current flow out amount.\"}},\"getTokenAddressFromParams(bytes)\":{\"params\":{\"params_\":\"The setup parameters.\"},\"returns\":{\"tokenAddress_\":\"The token address.\"}},\"hasRole(address,uint8)\":{\"params\":{\"account\":\"The address to check\",\"role\":\"The role to check\"},\"returns\":{\"_0\":\"True if the account has the role, false otherwise\"}},\"implementationType()\":{\"returns\":{\"_0\":\"uint256 The implementation type of this token manager.\"}},\"interchainTokenId()\":{\"details\":\"This will only work when implementation is called by a proxy, which stores the tokenId as an immutable.\",\"returns\":{\"_0\":\"bytes32 The interchain token ID.\"}},\"isFlowLimiter(address)\":{\"params\":{\"addr\":\"The address to query for.\"},\"returns\":{\"_0\":\"bool Boolean value representing whether or not the address is a flow limiter.\"}},\"isOperator(address)\":{\"params\":{\"addr\":\"The address to query for.\"},\"returns\":{\"_0\":\"bool Boolean value representing whether or not the address is an operator.\"}},\"mintToken(address,address,uint256)\":{\"details\":\"This function should revert if called by anyone but the service.\",\"params\":{\"amount\":\"The amount to mint.\",\"to\":\"The recipient.\",\"tokenAddress_\":\"The address of the token, since its cheaper to pass it in instead of reading it as the token manager.\"}},\"multicall(bytes[])\":{\"details\":\"This function requires that the contract has sufficient balance for the delegate calls. If any of the calls fail, the function will revert with the failure message.\",\"params\":{\"data\":\"An array of encoded function calls\"},\"returns\":{\"results\":\"An bytes array with the return data of each function call\"}},\"params(bytes,address)\":{\"details\":\"This function will be mainly used by frontends.\",\"params\":{\"operator_\":\"The operator of the TokenManager.\",\"tokenAddress_\":\"The token to be managed.\"},\"returns\":{\"params_\":\"The resulting params to be passed to custom TokenManager deployments.\"}},\"proposeOperatorship(address)\":{\"details\":\"Can only be called by the current operator.\",\"params\":{\"operator\":\"The address of the new operator.\"}},\"removeFlowLimiter(address)\":{\"details\":\"Can only be called by the operator.\",\"params\":{\"flowLimiter\":\"the address of an existing flow limiter.\"}},\"setFlowLimit(uint256)\":{\"details\":\"Can only be called by the flow limiters.\",\"params\":{\"flowLimit_\":\"The maximum difference between the tokens flowing in and/or out at any given interval of time (6h).\"}},\"setup(bytes)\":{\"details\":\"This function should only be called by the proxy, and only once from the proxy constructor. The exact format of params depends on the type of TokenManager used but the first 32 bytes are reserved for the address of the operator, stored as bytes (to be compatible with non-EVM chains)\",\"params\":{\"params_\":\"The parameters to be used to initialize the TokenManager.\"}},\"tokenAddress()\":{\"details\":\"This function is not supported when directly called on the implementation. It must be called by the proxy.\",\"returns\":{\"_0\":\"tokenAddress_ The address of the token.\"}},\"transferFlowLimiter(address,address)\":{\"details\":\"Can only be called by the operator.\",\"params\":{\"from\":\"the address of the old flow limiter.\",\"to\":\"the address of the new flow limiter.\"}},\"transferOperatorship(address)\":{\"details\":\"Can only be called by the current operator.\",\"params\":{\"operator\":\"The address of the new operator.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOperatorship(address)\":{\"notice\":\"Accept a proposed change of operatorship.\"},\"addFlowLimiter(address)\":{\"notice\":\"This function adds a flow limiter for this TokenManager.\"},\"approveService()\":{\"notice\":\"A function to renew approval to the service if we need to.\"},\"burnToken(address,address,uint256)\":{\"notice\":\"External function to allow the service to burn tokens through the tokenManager\"},\"contractId()\":{\"notice\":\"Getter for the contract id.\"},\"flowInAmount()\":{\"notice\":\"Returns the current flow in amount.\"},\"flowLimit()\":{\"notice\":\"Returns the current flow limit.\"},\"flowOutAmount()\":{\"notice\":\"Returns the current flow out amount.\"},\"getTokenAddressFromParams(bytes)\":{\"notice\":\"A function that should return the token address from the setup params.\"},\"hasRole(address,uint8)\":{\"notice\":\"Checks if an account has a role.\"},\"implementationType()\":{\"notice\":\"Returns implementation type of this token manager.\"},\"interchainTokenId()\":{\"notice\":\"A function that returns the token id.\"},\"isFlowLimiter(address)\":{\"notice\":\"Query if an address is a flow limiter.\"},\"isOperator(address)\":{\"notice\":\"Query if an address is a operator.\"},\"mintToken(address,address,uint256)\":{\"notice\":\"External function to allow the service to mint tokens through the tokenManager\"},\"multicall(bytes[])\":{\"notice\":\"Performs multiple delegate calls and returns the results of all calls as an array\"},\"params(bytes,address)\":{\"notice\":\"Getter function for the parameters of a lock/unlock TokenManager.\"},\"proposeOperatorship(address)\":{\"notice\":\"Propose a change of the operator of the contract.\"},\"removeFlowLimiter(address)\":{\"notice\":\"This function removes a flow limiter for this TokenManager.\"},\"setFlowLimit(uint256)\":{\"notice\":\"This function sets the flow limit for this TokenManager.\"},\"setup(bytes)\":{\"notice\":\"Setup function for the TokenManager.\"},\"tokenAddress()\":{\"notice\":\"Reads the token address from the proxy.\"},\"transferFlowLimiter(address,address)\":{\"notice\":\"This function transfers a flow limiter for this TokenManager.\"},\"transferOperatorship(address)\":{\"notice\":\"Change the operator of the contract.\"}},\"notice\":\"TNTokenManager minimally extends TokenManager to accept return values for mints/burns made to RWTEL to convert decimals between custom-linked TEL ERC20s on remote chains & Telcoin-Network's native 18 decmals\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interchain-token-service/TNTokenManager.sol\":\"TNTokenManager\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@axelar-cgp-solidity/=node_modules/@axelar-network/axelar-cgp-solidity/\",\":@axelar-network/=node_modules/@axelar-network/\",\":@openzeppelin-contracts/=node_modules/recoverable-wrapper/node_modules/@openzeppelin/contracts/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@uniswap/=node_modules/@uniswap/\",\":ds-test/=node_modules/recoverable-wrapper/lib/forge-std/lib/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\",\":recoverable-wrapper/contracts/=node_modules/recoverable-wrapper/contracts/\",\":solady/=node_modules/solady/src/\",\":telcoin-contracts/=node_modules/telcoin-contracts/\"]},\"sources\":{\"node_modules/@axelar-network/axelar-gmp-sdk-solidity/contracts/interfaces/IContractIdentifier.sol\":{\"keccak256\":\"0x21a94655f7f1ed3d7188bd38ce6187892c615b80f9a74e123cbc38113d855a35\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7e1f30e159d40a9f8431c26955a584507bc23a30f19380c723acdb4182ba7c1\",\"dweb:/ipfs/QmXb965di5pU3m3W36k19ZX8m6qCDaEi1jEt6NocqrGPXj\"]},\"node_modules/@axelar-network/axelar-gmp-sdk-solidity/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xb77ad755f4eade679279d5ca12b6926595e41e17387e143530f4fb57672d58d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0d01d0810d12dba98839b084440ab9b52e04d94e9431a6ffadabb1651d0f100\",\"dweb:/ipfs/Qme9KLMtbmNvsAj2giGTzNFKAymkMJq88Ef445pLiawKWa\"]},\"node_modules/@axelar-network/axelar-gmp-sdk-solidity/contracts/interfaces/IImplementation.sol\":{\"keccak256\":\"0xa7f275514d44bec3ab8ab8c768736329174d7cc6c5cd329c3509a66bce9cd468\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://983e8c97e4916b47244d71fa104fc368100991561fe8c28f1a6bae043763754d\",\"dweb:/ipfs/QmeFeJsCowShVsAe6RMiz3qjY2JTyRNYRRu1oYQcN9T6uV\"]},\"node_modules/@axelar-network/axelar-gmp-sdk-solidity/contracts/interfaces/IMulticall.sol\":{\"keccak256\":\"0x49d2a1b49f073216898bfa66a9a6e61b63de6dba4acb3b180f3d9237f000f0bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba675a7832c441bfdf419860be5bc0c6eb83abfe0fe89aad155f9d0e771095d6\",\"dweb:/ipfs/QmNsPju7vm5hakDKCDYJ7sjqxfKMvsTDRbMKjLXELBtZKR\"]},\"node_modules/@axelar-network/axelar-gmp-sdk-solidity/contracts/interfaces/IRolesBase.sol\":{\"keccak256\":\"0x9f8b439986230a5ec7e47084609243367995680771db149bd1ec0d74ff6565cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://284a7e08b5ba45af9c87587c22590a967c915bf1d7e944935289a751dc26b3f4\",\"dweb:/ipfs/QmYLdJBSaT5wYRuR3rqUDBg46u56NiWVcUb9iBiuYNr6Dn\"]},\"node_modules/@axelar-network/axelar-gmp-sdk-solidity/contracts/libs/AddressBytes.sol\":{\"keccak256\":\"0x5b7ced44be4e05faf625c991684ff9f3457a2d8f43acd897ac32e1b7285fb93c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79562967d08fc014d8ce7b861e60191525f08d1ad3e8626943fd4496f4624f5a\",\"dweb:/ipfs/QmWPzftTGQ16dJorNKhZgGPw9MMQWzxa4FzBWSP3Pv3agN\"]},\"node_modules/@axelar-network/axelar-gmp-sdk-solidity/contracts/libs/SafeTransfer.sol\":{\"keccak256\":\"0x47a90a91b2d83964eb58bb08c7fdaf9cf64e9e824a735f940205885893b17770\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bdba8b6a309698e08106d82d34f316c656c5a258d0ad0b602c8f0aa8549baae9\",\"dweb:/ipfs/QmTkpwgyw5wTtn6d1Tw24y9wpazoP6K6LWQ9xzYHaxLrGG\"]},\"node_modules/@axelar-network/axelar-gmp-sdk-solidity/contracts/upgradable/Implementation.sol\":{\"keccak256\":\"0xa194633594ef20445fe09496845e4b501398a80f364e3a1d05dc5ff5625197dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a35a3196b9aab5c2af7837477d2b7bbd20ee352861652fb7c9c94f3919266853\",\"dweb:/ipfs/QmWMmi2CvwikABehcjwnhbsAZpcktmWcvT7LM7s8gj949q\"]},\"node_modules/@axelar-network/axelar-gmp-sdk-solidity/contracts/utils/Multicall.sol\":{\"keccak256\":\"0xf964ef51a01b4ac380b09a124eb211c141b47b087049edbf24c008320fe67035\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ff6b8819149b27ea60cb24df1751098dbd21cd3aee1e49cb85b778328d38e1b\",\"dweb:/ipfs/QmZPXANLB3w47W7G1ruQp6H42oXdGmnR486CFgkNaP8AQb\"]},\"node_modules/@axelar-network/axelar-gmp-sdk-solidity/contracts/utils/RolesBase.sol\":{\"keccak256\":\"0x80b2c8dcd141cb3a8a75fa009794b5b60ac10c7e6f516dbb4ce8ef308adf8890\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0d84b097f19d7ef46c433fe9a5c786c691899fe1985b70c223c437fd0898e75\",\"dweb:/ipfs/QmangtBhJSLAoMLvHCeqzvhcwc36QKnhFxHAJkW8P8PxEa\"]},\"node_modules/@axelar-network/interchain-token-service/contracts/interfaces/IBaseTokenManager.sol\":{\"keccak256\":\"0x67fdd99fd11b9c20c55e6562f224b066ec8171d744c42eac519a47fbefe48222\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7cf8a9dbf0625edb310dfc6827270068d2cc12370a0c92e50652f5cd91f136e1\",\"dweb:/ipfs/QmbDM7C2VND3BjBF5K9Ma2DjCHgzhLBdxqfLsNM3w9hzxb\"]},\"node_modules/@axelar-network/interchain-token-service/contracts/interfaces/IERC20MintableBurnable.sol\":{\"keccak256\":\"0x9c5bc5193bb89c01aa74e2d31d81baaa2f60592a73105e43f67ee4021e5fb5bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29485b020703fa06a536b3a9361ae61401d8c85d7b58a5b1307ed098af17b3b3\",\"dweb:/ipfs/QmXeKF4xeC2uu3zPa3tWS1W5UCHAX15Fikz5iuuY1nWjgP\"]},\"node_modules/@axelar-network/interchain-token-service/contracts/interfaces/IFlowLimit.sol\":{\"keccak256\":\"0x4678792256d6a601d183e06dde6c244c855b2aac6ec1dfe143ede88d0139e81b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a69d9a7b9fc59ad24902b99935d26140e7e2c54d9effc0b55599bafa85f10189\",\"dweb:/ipfs/QmZZcdCS87CFYbn95ALetEt3LkK5mEL3een4PbzdYN2FkH\"]},\"node_modules/@axelar-network/interchain-token-service/contracts/interfaces/IOperator.sol\":{\"keccak256\":\"0xddabf817cac789b6f7110c7f6d4a75a22000007e20a852a18f422441c80524a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41d77ed3708d40602b52f6afa1f9d9200e049f2b8b5cd9e61206d7857fd19aa2\",\"dweb:/ipfs/QmafnrTEYK2PfsaQpzPbCQ6V95xZeeSaKW5Z1Bwt96Y3w1\"]},\"node_modules/@axelar-network/interchain-token-service/contracts/interfaces/ITokenManager.sol\":{\"keccak256\":\"0xbbcb19e665e718ad803f0582d3b53153b9daf0826abe3b61d1febd442d30833d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92a22e39ce4712e9c2c2380c1fe0fd288062c46b4e7f1bdafdfb0a49d0beb8c4\",\"dweb:/ipfs/QmT1Sn1mgzLwuWBQ8jMD9gAgVTCWUHTJA38Bfo62bVd3Zt\"]},\"node_modules/@axelar-network/interchain-token-service/contracts/token-manager/TokenManager.sol\":{\"keccak256\":\"0x9e33825bd1fd73122cf2456465f381f46d0e122e1547c417d06eee6184b2eab5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://108fc1af6785b0c95ba3854fe278cc829bbf2c25cc58d57676fdf37b65409e79\",\"dweb:/ipfs/QmdJnmNyWTrwnkvv6K6WrrspDaZTUP6xS8UBhDANUcSUQa\"]},\"node_modules/@axelar-network/interchain-token-service/contracts/utils/FlowLimit.sol\":{\"keccak256\":\"0xeee26b790e673f56041f850894777d124b7bee8fcfc56666da9b87139338fda9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dcd3f861c8caa51da1685195ff1759f034b6d44d223834f1a07f721a18c59ded\",\"dweb:/ipfs/QmSvTLnkCBF82of4miZLoyHph81KNhKF72CtbXxZoZQSG2\"]},\"node_modules/@axelar-network/interchain-token-service/contracts/utils/Operator.sol\":{\"keccak256\":\"0x42547f1f196e4b178ae17a691debe77343b4373377a9521b7d5c70549017bca8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3d32b23d7d9c01126bc4313a3e3e1840bbc181c3ee726e2e88e48853aca586c\",\"dweb:/ipfs/QmZkRqxqSHrakJRnKokiPTCoYwLQypV9LFzaSeiTcs6YTw\"]},\"node_modules/@axelar-network/interchain-token-service/contracts/utils/RolesConstants.sol\":{\"keccak256\":\"0x0a1b59c47545ded4e2b862e0beacbb2be1ad2576cdaafe69de4b076353eb72ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d7a081047d9c99fa02771c8e919964b95af3959df8582321b076204036a2de6\",\"dweb:/ipfs/QmWhBkeNwUUwd7zVYYGMY3d2WrsSkdSzTacWNRrGp8pRwf\"]},\"src/interchain-token-service/TNTokenManager.sol\":{\"keccak256\":\"0x127dab9d94c4f8fac8f227bf004e81b244fef011e780f3935b2376f2de4c8927\",\"urls\":[\"bzz-raw://777177b5e29c603e58528628cd075afe59013b326af2a05c394b92006e595481\",\"dweb:/ipfs/QmXGuK9dTxdyHNhakRvGQcx4qrL97YJnp2EzEzARqyMR1f\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.26+commit.8a97fa7a" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "interchainTokenService_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "flowLimiter",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "AlreadyFlowLimiter"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "flowAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "flowToAdd",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "tokenManager",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "FlowAdditionOverflow"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "limit", "type": "uint256" },
            {
              "internalType": "uint256",
              "name": "flowAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "tokenManager",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "FlowLimitExceeded"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "flowLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "flowToCompare",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "tokenManager",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "FlowLimitOverflow"
        },
        { "inputs": [], "type": "error", "name": "GiveTokenFailed" },
        {
          "inputs": [
            { "internalType": "bytes", "name": "bytesAddress", "type": "bytes" }
          ],
          "type": "error",
          "name": "InvalidBytesLength"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "fromAccount",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "toAccount",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "accountRoles",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "InvalidProposedRoles"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "account", "type": "address" },
            {
              "internalType": "uint256",
              "name": "accountRoles",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "MissingAllRoles"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "account", "type": "address" },
            {
              "internalType": "uint256",
              "name": "accountRoles",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "MissingAnyOfRoles"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "account", "type": "address" },
            { "internalType": "uint8", "name": "role", "type": "uint8" }
          ],
          "type": "error",
          "name": "MissingRole"
        },
        { "inputs": [], "type": "error", "name": "MulticallFailed" },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "flowLimiter",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "NotFlowLimiter"
        },
        { "inputs": [], "type": "error", "name": "NotProxy" },
        {
          "inputs": [
            { "internalType": "address", "name": "caller", "type": "address" }
          ],
          "type": "error",
          "name": "NotService"
        },
        { "inputs": [], "type": "error", "name": "NotSupported" },
        {
          "inputs": [
            { "internalType": "address", "name": "caller", "type": "address" }
          ],
          "type": "error",
          "name": "NotToken"
        },
        { "inputs": [], "type": "error", "name": "TakeTokenFailed" },
        { "inputs": [], "type": "error", "name": "TokenLinkerZeroAddress" },
        { "inputs": [], "type": "error", "name": "TokenTransferFailed" },
        { "inputs": [], "type": "error", "name": "ZeroAddress" },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "tokenId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "flowLimit_",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FlowLimitSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "accountRoles",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RolesAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "fromAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "toAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "accountRoles",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RolesProposed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "accountRoles",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RolesRemoved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "fromOperator",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptOperatorship"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addFlowIn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "flowLimiter",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addFlowLimiter"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addFlowOut"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approveService"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenAddress_",
              "type": "address"
            },
            { "internalType": "address", "name": "from", "type": "address" },
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burnToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenAddress_",
              "type": "address"
            },
            { "internalType": "address", "name": "from", "type": "address" },
            {
              "internalType": "uint256",
              "name": "nativeAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burnTokenWithReturn",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "burnedAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractId",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "flowInAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "flowInAmount_",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "flowLimit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "flowLimit_",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "flowOutAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "flowOutAmount_",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes", "name": "params_", "type": "bytes" }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getTokenAddressFromParams",
          "outputs": [
            {
              "internalType": "address",
              "name": "tokenAddress_",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "account", "type": "address" },
            { "internalType": "uint8", "name": "role", "type": "uint8" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "implementationType",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "interchainTokenId",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "interchainTokenService",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "addr", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isFlowLimiter",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "addr", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOperator",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenAddress_",
              "type": "address"
            },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenAddress_",
              "type": "address"
            },
            { "internalType": "address", "name": "to", "type": "address" },
            {
              "internalType": "uint256",
              "name": "originAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintTokenWithReturn",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "mintedAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes[]", "name": "data", "type": "bytes[]" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            { "internalType": "bytes[]", "name": "results", "type": "bytes[]" }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes", "name": "operator_", "type": "bytes" },
            {
              "internalType": "address",
              "name": "tokenAddress_",
              "type": "address"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "params",
          "outputs": [
            { "internalType": "bytes", "name": "params_", "type": "bytes" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "operator", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "proposeOperatorship"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "flowLimiter",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeFlowLimiter"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "flowLimit_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setFlowLimit"
        },
        {
          "inputs": [
            { "internalType": "bytes", "name": "params_", "type": "bytes" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setup"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenAddress",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFlowLimiter"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "operator", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOperatorship"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "acceptOperatorship(address)": {
            "details": "Can only be called by the proposed operator.",
            "params": {
              "fromOperator": "The previous operator of the contract."
            }
          },
          "addFlowLimiter(address)": {
            "details": "Can only be called by the operator.",
            "params": { "flowLimiter": "the address of the new flow limiter." }
          },
          "burnToken(address,address,uint256)": {
            "details": "This function should revert if called by anyone but the service.",
            "params": {
              "amount": "The amount to burn.",
              "from": "The address to burn the token from.",
              "tokenAddress_": "The address of the token, since its cheaper to pass it in instead of reading it as the token manager."
            }
          },
          "contractId()": { "returns": { "_0": "bytes32 The contract id." } },
          "flowInAmount()": {
            "returns": { "flowInAmount_": "The current flow in amount." }
          },
          "flowLimit()": {
            "returns": { "flowLimit_": "The current flow limit value." }
          },
          "flowOutAmount()": {
            "returns": { "flowOutAmount_": "The current flow out amount." }
          },
          "getTokenAddressFromParams(bytes)": {
            "params": { "params_": "The setup parameters." },
            "returns": { "tokenAddress_": "The token address." }
          },
          "hasRole(address,uint8)": {
            "params": {
              "account": "The address to check",
              "role": "The role to check"
            },
            "returns": {
              "_0": "True if the account has the role, false otherwise"
            }
          },
          "implementationType()": {
            "returns": {
              "_0": "uint256 The implementation type of this token manager."
            }
          },
          "interchainTokenId()": {
            "details": "This will only work when implementation is called by a proxy, which stores the tokenId as an immutable.",
            "returns": { "_0": "bytes32 The interchain token ID." }
          },
          "isFlowLimiter(address)": {
            "params": { "addr": "The address to query for." },
            "returns": {
              "_0": "bool Boolean value representing whether or not the address is a flow limiter."
            }
          },
          "isOperator(address)": {
            "params": { "addr": "The address to query for." },
            "returns": {
              "_0": "bool Boolean value representing whether or not the address is an operator."
            }
          },
          "mintToken(address,address,uint256)": {
            "details": "This function should revert if called by anyone but the service.",
            "params": {
              "amount": "The amount to mint.",
              "to": "The recipient.",
              "tokenAddress_": "The address of the token, since its cheaper to pass it in instead of reading it as the token manager."
            }
          },
          "multicall(bytes[])": {
            "details": "This function requires that the contract has sufficient balance for the delegate calls. If any of the calls fail, the function will revert with the failure message.",
            "params": { "data": "An array of encoded function calls" },
            "returns": {
              "results": "An bytes array with the return data of each function call"
            }
          },
          "params(bytes,address)": {
            "details": "This function will be mainly used by frontends.",
            "params": {
              "operator_": "The operator of the TokenManager.",
              "tokenAddress_": "The token to be managed."
            },
            "returns": {
              "params_": "The resulting params to be passed to custom TokenManager deployments."
            }
          },
          "proposeOperatorship(address)": {
            "details": "Can only be called by the current operator.",
            "params": { "operator": "The address of the new operator." }
          },
          "removeFlowLimiter(address)": {
            "details": "Can only be called by the operator.",
            "params": {
              "flowLimiter": "the address of an existing flow limiter."
            }
          },
          "setFlowLimit(uint256)": {
            "details": "Can only be called by the flow limiters.",
            "params": {
              "flowLimit_": "The maximum difference between the tokens flowing in and/or out at any given interval of time (6h)."
            }
          },
          "setup(bytes)": {
            "details": "This function should only be called by the proxy, and only once from the proxy constructor. The exact format of params depends on the type of TokenManager used but the first 32 bytes are reserved for the address of the operator, stored as bytes (to be compatible with non-EVM chains)",
            "params": {
              "params_": "The parameters to be used to initialize the TokenManager."
            }
          },
          "tokenAddress()": {
            "details": "This function is not supported when directly called on the implementation. It must be called by the proxy.",
            "returns": { "_0": "tokenAddress_ The address of the token." }
          },
          "transferFlowLimiter(address,address)": {
            "details": "Can only be called by the operator.",
            "params": {
              "from": "the address of the old flow limiter.",
              "to": "the address of the new flow limiter."
            }
          },
          "transferOperatorship(address)": {
            "details": "Can only be called by the current operator.",
            "params": { "operator": "The address of the new operator." }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "acceptOperatorship(address)": {
            "notice": "Accept a proposed change of operatorship."
          },
          "addFlowLimiter(address)": {
            "notice": "This function adds a flow limiter for this TokenManager."
          },
          "approveService()": {
            "notice": "A function to renew approval to the service if we need to."
          },
          "burnToken(address,address,uint256)": {
            "notice": "External function to allow the service to burn tokens through the tokenManager"
          },
          "contractId()": { "notice": "Getter for the contract id." },
          "flowInAmount()": { "notice": "Returns the current flow in amount." },
          "flowLimit()": { "notice": "Returns the current flow limit." },
          "flowOutAmount()": {
            "notice": "Returns the current flow out amount."
          },
          "getTokenAddressFromParams(bytes)": {
            "notice": "A function that should return the token address from the setup params."
          },
          "hasRole(address,uint8)": {
            "notice": "Checks if an account has a role."
          },
          "implementationType()": {
            "notice": "Returns implementation type of this token manager."
          },
          "interchainTokenId()": {
            "notice": "A function that returns the token id."
          },
          "isFlowLimiter(address)": {
            "notice": "Query if an address is a flow limiter."
          },
          "isOperator(address)": {
            "notice": "Query if an address is a operator."
          },
          "mintToken(address,address,uint256)": {
            "notice": "External function to allow the service to mint tokens through the tokenManager"
          },
          "multicall(bytes[])": {
            "notice": "Performs multiple delegate calls and returns the results of all calls as an array"
          },
          "params(bytes,address)": {
            "notice": "Getter function for the parameters of a lock/unlock TokenManager."
          },
          "proposeOperatorship(address)": {
            "notice": "Propose a change of the operator of the contract."
          },
          "removeFlowLimiter(address)": {
            "notice": "This function removes a flow limiter for this TokenManager."
          },
          "setFlowLimit(uint256)": {
            "notice": "This function sets the flow limit for this TokenManager."
          },
          "setup(bytes)": { "notice": "Setup function for the TokenManager." },
          "tokenAddress()": {
            "notice": "Reads the token address from the proxy."
          },
          "transferFlowLimiter(address,address)": {
            "notice": "This function transfers a flow limiter for this TokenManager."
          },
          "transferOperatorship(address)": {
            "notice": "Change the operator of the contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@axelar-cgp-solidity/=node_modules/@axelar-network/axelar-cgp-solidity/",
        "@axelar-network/=node_modules/@axelar-network/",
        "@openzeppelin-contracts/=node_modules/recoverable-wrapper/node_modules/@openzeppelin/contracts/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@uniswap/=node_modules/@uniswap/",
        "ds-test/=node_modules/recoverable-wrapper/lib/forge-std/lib/ds-test/src/",
        "forge-std/=node_modules/forge-std/src/",
        "recoverable-wrapper/contracts/=node_modules/recoverable-wrapper/contracts/",
        "solady/=node_modules/solady/src/",
        "telcoin-contracts/=node_modules/telcoin-contracts/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "none" },
      "compilationTarget": {
        "src/interchain-token-service/TNTokenManager.sol": "TNTokenManager"
      },
      "evmVersion": "shanghai",
      "libraries": {}
    },
    "sources": {
      "node_modules/@axelar-network/axelar-gmp-sdk-solidity/contracts/interfaces/IContractIdentifier.sol": {
        "keccak256": "0x21a94655f7f1ed3d7188bd38ce6187892c615b80f9a74e123cbc38113d855a35",
        "urls": [
          "bzz-raw://e7e1f30e159d40a9f8431c26955a584507bc23a30f19380c723acdb4182ba7c1",
          "dweb:/ipfs/QmXb965di5pU3m3W36k19ZX8m6qCDaEi1jEt6NocqrGPXj"
        ],
        "license": "MIT"
      },
      "node_modules/@axelar-network/axelar-gmp-sdk-solidity/contracts/interfaces/IERC20.sol": {
        "keccak256": "0xb77ad755f4eade679279d5ca12b6926595e41e17387e143530f4fb57672d58d7",
        "urls": [
          "bzz-raw://b0d01d0810d12dba98839b084440ab9b52e04d94e9431a6ffadabb1651d0f100",
          "dweb:/ipfs/Qme9KLMtbmNvsAj2giGTzNFKAymkMJq88Ef445pLiawKWa"
        ],
        "license": "MIT"
      },
      "node_modules/@axelar-network/axelar-gmp-sdk-solidity/contracts/interfaces/IImplementation.sol": {
        "keccak256": "0xa7f275514d44bec3ab8ab8c768736329174d7cc6c5cd329c3509a66bce9cd468",
        "urls": [
          "bzz-raw://983e8c97e4916b47244d71fa104fc368100991561fe8c28f1a6bae043763754d",
          "dweb:/ipfs/QmeFeJsCowShVsAe6RMiz3qjY2JTyRNYRRu1oYQcN9T6uV"
        ],
        "license": "MIT"
      },
      "node_modules/@axelar-network/axelar-gmp-sdk-solidity/contracts/interfaces/IMulticall.sol": {
        "keccak256": "0x49d2a1b49f073216898bfa66a9a6e61b63de6dba4acb3b180f3d9237f000f0bf",
        "urls": [
          "bzz-raw://ba675a7832c441bfdf419860be5bc0c6eb83abfe0fe89aad155f9d0e771095d6",
          "dweb:/ipfs/QmNsPju7vm5hakDKCDYJ7sjqxfKMvsTDRbMKjLXELBtZKR"
        ],
        "license": "MIT"
      },
      "node_modules/@axelar-network/axelar-gmp-sdk-solidity/contracts/interfaces/IRolesBase.sol": {
        "keccak256": "0x9f8b439986230a5ec7e47084609243367995680771db149bd1ec0d74ff6565cc",
        "urls": [
          "bzz-raw://284a7e08b5ba45af9c87587c22590a967c915bf1d7e944935289a751dc26b3f4",
          "dweb:/ipfs/QmYLdJBSaT5wYRuR3rqUDBg46u56NiWVcUb9iBiuYNr6Dn"
        ],
        "license": "MIT"
      },
      "node_modules/@axelar-network/axelar-gmp-sdk-solidity/contracts/libs/AddressBytes.sol": {
        "keccak256": "0x5b7ced44be4e05faf625c991684ff9f3457a2d8f43acd897ac32e1b7285fb93c",
        "urls": [
          "bzz-raw://79562967d08fc014d8ce7b861e60191525f08d1ad3e8626943fd4496f4624f5a",
          "dweb:/ipfs/QmWPzftTGQ16dJorNKhZgGPw9MMQWzxa4FzBWSP3Pv3agN"
        ],
        "license": "MIT"
      },
      "node_modules/@axelar-network/axelar-gmp-sdk-solidity/contracts/libs/SafeTransfer.sol": {
        "keccak256": "0x47a90a91b2d83964eb58bb08c7fdaf9cf64e9e824a735f940205885893b17770",
        "urls": [
          "bzz-raw://bdba8b6a309698e08106d82d34f316c656c5a258d0ad0b602c8f0aa8549baae9",
          "dweb:/ipfs/QmTkpwgyw5wTtn6d1Tw24y9wpazoP6K6LWQ9xzYHaxLrGG"
        ],
        "license": "MIT"
      },
      "node_modules/@axelar-network/axelar-gmp-sdk-solidity/contracts/upgradable/Implementation.sol": {
        "keccak256": "0xa194633594ef20445fe09496845e4b501398a80f364e3a1d05dc5ff5625197dd",
        "urls": [
          "bzz-raw://a35a3196b9aab5c2af7837477d2b7bbd20ee352861652fb7c9c94f3919266853",
          "dweb:/ipfs/QmWMmi2CvwikABehcjwnhbsAZpcktmWcvT7LM7s8gj949q"
        ],
        "license": "MIT"
      },
      "node_modules/@axelar-network/axelar-gmp-sdk-solidity/contracts/utils/Multicall.sol": {
        "keccak256": "0xf964ef51a01b4ac380b09a124eb211c141b47b087049edbf24c008320fe67035",
        "urls": [
          "bzz-raw://9ff6b8819149b27ea60cb24df1751098dbd21cd3aee1e49cb85b778328d38e1b",
          "dweb:/ipfs/QmZPXANLB3w47W7G1ruQp6H42oXdGmnR486CFgkNaP8AQb"
        ],
        "license": "MIT"
      },
      "node_modules/@axelar-network/axelar-gmp-sdk-solidity/contracts/utils/RolesBase.sol": {
        "keccak256": "0x80b2c8dcd141cb3a8a75fa009794b5b60ac10c7e6f516dbb4ce8ef308adf8890",
        "urls": [
          "bzz-raw://b0d84b097f19d7ef46c433fe9a5c786c691899fe1985b70c223c437fd0898e75",
          "dweb:/ipfs/QmangtBhJSLAoMLvHCeqzvhcwc36QKnhFxHAJkW8P8PxEa"
        ],
        "license": "MIT"
      },
      "node_modules/@axelar-network/interchain-token-service/contracts/interfaces/IBaseTokenManager.sol": {
        "keccak256": "0x67fdd99fd11b9c20c55e6562f224b066ec8171d744c42eac519a47fbefe48222",
        "urls": [
          "bzz-raw://7cf8a9dbf0625edb310dfc6827270068d2cc12370a0c92e50652f5cd91f136e1",
          "dweb:/ipfs/QmbDM7C2VND3BjBF5K9Ma2DjCHgzhLBdxqfLsNM3w9hzxb"
        ],
        "license": "MIT"
      },
      "node_modules/@axelar-network/interchain-token-service/contracts/interfaces/IERC20MintableBurnable.sol": {
        "keccak256": "0x9c5bc5193bb89c01aa74e2d31d81baaa2f60592a73105e43f67ee4021e5fb5bf",
        "urls": [
          "bzz-raw://29485b020703fa06a536b3a9361ae61401d8c85d7b58a5b1307ed098af17b3b3",
          "dweb:/ipfs/QmXeKF4xeC2uu3zPa3tWS1W5UCHAX15Fikz5iuuY1nWjgP"
        ],
        "license": "MIT"
      },
      "node_modules/@axelar-network/interchain-token-service/contracts/interfaces/IFlowLimit.sol": {
        "keccak256": "0x4678792256d6a601d183e06dde6c244c855b2aac6ec1dfe143ede88d0139e81b",
        "urls": [
          "bzz-raw://a69d9a7b9fc59ad24902b99935d26140e7e2c54d9effc0b55599bafa85f10189",
          "dweb:/ipfs/QmZZcdCS87CFYbn95ALetEt3LkK5mEL3een4PbzdYN2FkH"
        ],
        "license": "MIT"
      },
      "node_modules/@axelar-network/interchain-token-service/contracts/interfaces/IOperator.sol": {
        "keccak256": "0xddabf817cac789b6f7110c7f6d4a75a22000007e20a852a18f422441c80524a8",
        "urls": [
          "bzz-raw://41d77ed3708d40602b52f6afa1f9d9200e049f2b8b5cd9e61206d7857fd19aa2",
          "dweb:/ipfs/QmafnrTEYK2PfsaQpzPbCQ6V95xZeeSaKW5Z1Bwt96Y3w1"
        ],
        "license": "MIT"
      },
      "node_modules/@axelar-network/interchain-token-service/contracts/interfaces/ITokenManager.sol": {
        "keccak256": "0xbbcb19e665e718ad803f0582d3b53153b9daf0826abe3b61d1febd442d30833d",
        "urls": [
          "bzz-raw://92a22e39ce4712e9c2c2380c1fe0fd288062c46b4e7f1bdafdfb0a49d0beb8c4",
          "dweb:/ipfs/QmT1Sn1mgzLwuWBQ8jMD9gAgVTCWUHTJA38Bfo62bVd3Zt"
        ],
        "license": "MIT"
      },
      "node_modules/@axelar-network/interchain-token-service/contracts/token-manager/TokenManager.sol": {
        "keccak256": "0x9e33825bd1fd73122cf2456465f381f46d0e122e1547c417d06eee6184b2eab5",
        "urls": [
          "bzz-raw://108fc1af6785b0c95ba3854fe278cc829bbf2c25cc58d57676fdf37b65409e79",
          "dweb:/ipfs/QmdJnmNyWTrwnkvv6K6WrrspDaZTUP6xS8UBhDANUcSUQa"
        ],
        "license": "MIT"
      },
      "node_modules/@axelar-network/interchain-token-service/contracts/utils/FlowLimit.sol": {
        "keccak256": "0xeee26b790e673f56041f850894777d124b7bee8fcfc56666da9b87139338fda9",
        "urls": [
          "bzz-raw://dcd3f861c8caa51da1685195ff1759f034b6d44d223834f1a07f721a18c59ded",
          "dweb:/ipfs/QmSvTLnkCBF82of4miZLoyHph81KNhKF72CtbXxZoZQSG2"
        ],
        "license": "MIT"
      },
      "node_modules/@axelar-network/interchain-token-service/contracts/utils/Operator.sol": {
        "keccak256": "0x42547f1f196e4b178ae17a691debe77343b4373377a9521b7d5c70549017bca8",
        "urls": [
          "bzz-raw://c3d32b23d7d9c01126bc4313a3e3e1840bbc181c3ee726e2e88e48853aca586c",
          "dweb:/ipfs/QmZkRqxqSHrakJRnKokiPTCoYwLQypV9LFzaSeiTcs6YTw"
        ],
        "license": "MIT"
      },
      "node_modules/@axelar-network/interchain-token-service/contracts/utils/RolesConstants.sol": {
        "keccak256": "0x0a1b59c47545ded4e2b862e0beacbb2be1ad2576cdaafe69de4b076353eb72ad",
        "urls": [
          "bzz-raw://3d7a081047d9c99fa02771c8e919964b95af3959df8582321b076204036a2de6",
          "dweb:/ipfs/QmWhBkeNwUUwd7zVYYGMY3d2WrsSkdSzTacWNRrGp8pRwf"
        ],
        "license": "MIT"
      },
      "src/interchain-token-service/TNTokenManager.sol": {
        "keccak256": "0x127dab9d94c4f8fac8f227bf004e81b244fef011e780f3935b2376f2de4c8927",
        "urls": [
          "bzz-raw://777177b5e29c603e58528628cd075afe59013b326af2a05c394b92006e595481",
          "dweb:/ipfs/QmXGuK9dTxdyHNhakRvGQcx4qrL97YJnp2EzEzARqyMR1f"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "id": 151
}
